// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sequence.proto

package net.onlinesequencer.player.protos;

public final class SequenceProto {
  private SequenceProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code SynthType}
   */
  public enum SynthType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>Sine = 0;</code>
     */
    Sine(0),
    /**
     * <code>Square = 1;</code>
     */
    Square(1),
    /**
     * <code>Sawtooth = 2;</code>
     */
    Sawtooth(2),
    /**
     * <code>Triangle = 3;</code>
     */
    Triangle(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>Sine = 0;</code>
     */
    public static final int Sine_VALUE = 0;
    /**
     * <code>Square = 1;</code>
     */
    public static final int Square_VALUE = 1;
    /**
     * <code>Sawtooth = 2;</code>
     */
    public static final int Sawtooth_VALUE = 2;
    /**
     * <code>Triangle = 3;</code>
     */
    public static final int Triangle_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SynthType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static SynthType forNumber(int value) {
      switch (value) {
        case 0: return Sine;
        case 1: return Square;
        case 2: return Sawtooth;
        case 3: return Triangle;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SynthType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SynthType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SynthType>() {
            public SynthType findValueByNumber(int number) {
              return SynthType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return net.onlinesequencer.player.protos.SequenceProto.getDescriptor().getEnumTypes().get(0);
    }

    private static final SynthType[] VALUES = values();

    public static SynthType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SynthType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:SynthType)
  }

  /**
   * Protobuf enum {@code LFOType}
   */
  public enum LFOType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SineLFO = 0;</code>
     */
    SineLFO(0),
    /**
     * <code>SquareLFO = 1;</code>
     */
    SquareLFO(1),
    /**
     * <code>SawtoothLFO = 2;</code>
     */
    SawtoothLFO(2),
    /**
     * <code>TriangleLFO = 3;</code>
     */
    TriangleLFO(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>SineLFO = 0;</code>
     */
    public static final int SineLFO_VALUE = 0;
    /**
     * <code>SquareLFO = 1;</code>
     */
    public static final int SquareLFO_VALUE = 1;
    /**
     * <code>SawtoothLFO = 2;</code>
     */
    public static final int SawtoothLFO_VALUE = 2;
    /**
     * <code>TriangleLFO = 3;</code>
     */
    public static final int TriangleLFO_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static LFOType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static LFOType forNumber(int value) {
      switch (value) {
        case 0: return SineLFO;
        case 1: return SquareLFO;
        case 2: return SawtoothLFO;
        case 3: return TriangleLFO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LFOType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        LFOType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LFOType>() {
            public LFOType findValueByNumber(int number) {
              return LFOType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return net.onlinesequencer.player.protos.SequenceProto.getDescriptor().getEnumTypes().get(1);
    }

    private static final LFOType[] VALUES = values();

    public static LFOType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private LFOType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:LFOType)
  }

  /**
   * Protobuf enum {@code LFOTarget}
   */
  public enum LFOTarget
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>Volume = 0;</code>
     */
    Volume(0),
    /**
     * <code>Pitch = 1;</code>
     */
    Pitch(1),
    /**
     * <code>Filter = 2;</code>
     */
    Filter(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>Volume = 0;</code>
     */
    public static final int Volume_VALUE = 0;
    /**
     * <code>Pitch = 1;</code>
     */
    public static final int Pitch_VALUE = 1;
    /**
     * <code>Filter = 2;</code>
     */
    public static final int Filter_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static LFOTarget valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static LFOTarget forNumber(int value) {
      switch (value) {
        case 0: return Volume;
        case 1: return Pitch;
        case 2: return Filter;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LFOTarget>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        LFOTarget> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LFOTarget>() {
            public LFOTarget findValueByNumber(int number) {
              return LFOTarget.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return net.onlinesequencer.player.protos.SequenceProto.getDescriptor().getEnumTypes().get(2);
    }

    private static final LFOTarget[] VALUES = values();

    public static LFOTarget valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private LFOTarget(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:LFOTarget)
  }

  /**
   * Protobuf enum {@code LFOMode}
   */
  public enum LFOMode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>Numerator = 0;</code>
     */
    Numerator(0),
    /**
     * <code>Frequency = 1;</code>
     */
    Frequency(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>Numerator = 0;</code>
     */
    public static final int Numerator_VALUE = 0;
    /**
     * <code>Frequency = 1;</code>
     */
    public static final int Frequency_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static LFOMode valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static LFOMode forNumber(int value) {
      switch (value) {
        case 0: return Numerator;
        case 1: return Frequency;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LFOMode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        LFOMode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LFOMode>() {
            public LFOMode findValueByNumber(int number) {
              return LFOMode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return net.onlinesequencer.player.protos.SequenceProto.getDescriptor().getEnumTypes().get(3);
    }

    private static final LFOMode[] VALUES = values();

    public static LFOMode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private LFOMode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:LFOMode)
  }

  public interface NoteOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Note)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.NoteType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <code>.NoteType type = 1;</code>
     * @return The type.
     */
    net.onlinesequencer.player.protos.NoteTypeProto.NoteType getType();

    /**
     * <code>float time = 2;</code>
     * @return The time.
     */
    float getTime();

    /**
     * <code>float length = 3;</code>
     * @return The length.
     */
    float getLength();

    /**
     * <code>int32 instrument = 4;</code>
     * @return The instrument.
     */
    int getInstrument();

    /**
     * <code>float volume = 5;</code>
     * @return The volume.
     */
    float getVolume();
  }
  /**
   * Protobuf type {@code Note}
   */
  public static final class Note extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Note)
      NoteOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Note.newBuilder() to construct.
    private Note(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Note() {
      type_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Note();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.onlinesequencer.player.protos.SequenceProto.internal_static_Note_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.onlinesequencer.player.protos.SequenceProto.internal_static_Note_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.onlinesequencer.player.protos.SequenceProto.Note.class, net.onlinesequencer.player.protos.SequenceProto.Note.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>.NoteType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.NoteType type = 1;</code>
     * @return The type.
     */
    @java.lang.Override public net.onlinesequencer.player.protos.NoteTypeProto.NoteType getType() {
      @SuppressWarnings("deprecation")
      net.onlinesequencer.player.protos.NoteTypeProto.NoteType result = net.onlinesequencer.player.protos.NoteTypeProto.NoteType.valueOf(type_);
      return result == null ? net.onlinesequencer.player.protos.NoteTypeProto.NoteType.UNRECOGNIZED : result;
    }

    public static final int TIME_FIELD_NUMBER = 2;
    private float time_;
    /**
     * <code>float time = 2;</code>
     * @return The time.
     */
    @java.lang.Override
    public float getTime() {
      return time_;
    }

    public static final int LENGTH_FIELD_NUMBER = 3;
    private float length_;
    /**
     * <code>float length = 3;</code>
     * @return The length.
     */
    @java.lang.Override
    public float getLength() {
      return length_;
    }

    public static final int INSTRUMENT_FIELD_NUMBER = 4;
    private int instrument_;
    /**
     * <code>int32 instrument = 4;</code>
     * @return The instrument.
     */
    @java.lang.Override
    public int getInstrument() {
      return instrument_;
    }

    public static final int VOLUME_FIELD_NUMBER = 5;
    private float volume_;
    /**
     * <code>float volume = 5;</code>
     * @return The volume.
     */
    @java.lang.Override
    public float getVolume() {
      return volume_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != net.onlinesequencer.player.protos.NoteTypeProto.NoteType.C0.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (java.lang.Float.floatToRawIntBits(time_) != 0) {
        output.writeFloat(2, time_);
      }
      if (java.lang.Float.floatToRawIntBits(length_) != 0) {
        output.writeFloat(3, length_);
      }
      if (instrument_ != 0) {
        output.writeInt32(4, instrument_);
      }
      if (java.lang.Float.floatToRawIntBits(volume_) != 0) {
        output.writeFloat(5, volume_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != net.onlinesequencer.player.protos.NoteTypeProto.NoteType.C0.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (java.lang.Float.floatToRawIntBits(time_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, time_);
      }
      if (java.lang.Float.floatToRawIntBits(length_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, length_);
      }
      if (instrument_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, instrument_);
      }
      if (java.lang.Float.floatToRawIntBits(volume_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, volume_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.onlinesequencer.player.protos.SequenceProto.Note)) {
        return super.equals(obj);
      }
      net.onlinesequencer.player.protos.SequenceProto.Note other = (net.onlinesequencer.player.protos.SequenceProto.Note) obj;

      if (type_ != other.type_) return false;
      if (java.lang.Float.floatToIntBits(getTime())
          != java.lang.Float.floatToIntBits(
              other.getTime())) return false;
      if (java.lang.Float.floatToIntBits(getLength())
          != java.lang.Float.floatToIntBits(
              other.getLength())) return false;
      if (getInstrument()
          != other.getInstrument()) return false;
      if (java.lang.Float.floatToIntBits(getVolume())
          != java.lang.Float.floatToIntBits(
              other.getVolume())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (37 * hash) + TIME_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getTime());
      hash = (37 * hash) + LENGTH_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getLength());
      hash = (37 * hash) + INSTRUMENT_FIELD_NUMBER;
      hash = (53 * hash) + getInstrument();
      hash = (37 * hash) + VOLUME_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getVolume());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.onlinesequencer.player.protos.SequenceProto.Note parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.Note parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.Note parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.Note parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.Note parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.Note parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.Note parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.Note parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.Note parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.Note parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.Note parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.Note parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.onlinesequencer.player.protos.SequenceProto.Note prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Note}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Note)
        net.onlinesequencer.player.protos.SequenceProto.NoteOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.onlinesequencer.player.protos.SequenceProto.internal_static_Note_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.onlinesequencer.player.protos.SequenceProto.internal_static_Note_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.onlinesequencer.player.protos.SequenceProto.Note.class, net.onlinesequencer.player.protos.SequenceProto.Note.Builder.class);
      }

      // Construct using net.onlinesequencer.player.protos.SequenceProto.Note.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = 0;

        time_ = 0F;

        length_ = 0F;

        instrument_ = 0;

        volume_ = 0F;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.onlinesequencer.player.protos.SequenceProto.internal_static_Note_descriptor;
      }

      @java.lang.Override
      public net.onlinesequencer.player.protos.SequenceProto.Note getDefaultInstanceForType() {
        return net.onlinesequencer.player.protos.SequenceProto.Note.getDefaultInstance();
      }

      @java.lang.Override
      public net.onlinesequencer.player.protos.SequenceProto.Note build() {
        net.onlinesequencer.player.protos.SequenceProto.Note result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.onlinesequencer.player.protos.SequenceProto.Note buildPartial() {
        net.onlinesequencer.player.protos.SequenceProto.Note result = new net.onlinesequencer.player.protos.SequenceProto.Note(this);
        result.type_ = type_;
        result.time_ = time_;
        result.length_ = length_;
        result.instrument_ = instrument_;
        result.volume_ = volume_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.onlinesequencer.player.protos.SequenceProto.Note) {
          return mergeFrom((net.onlinesequencer.player.protos.SequenceProto.Note)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.onlinesequencer.player.protos.SequenceProto.Note other) {
        if (other == net.onlinesequencer.player.protos.SequenceProto.Note.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.getTime() != 0F) {
          setTime(other.getTime());
        }
        if (other.getLength() != 0F) {
          setLength(other.getLength());
        }
        if (other.getInstrument() != 0) {
          setInstrument(other.getInstrument());
        }
        if (other.getVolume() != 0F) {
          setVolume(other.getVolume());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                type_ = input.readEnum();

                break;
              } // case 8
              case 21: {
                time_ = input.readFloat();

                break;
              } // case 21
              case 29: {
                length_ = input.readFloat();

                break;
              } // case 29
              case 32: {
                instrument_ = input.readInt32();

                break;
              } // case 32
              case 45: {
                volume_ = input.readFloat();

                break;
              } // case 45
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int type_ = 0;
      /**
       * <code>.NoteType type = 1;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.NoteType type = 1;</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.NoteType type = 1;</code>
       * @return The type.
       */
      @java.lang.Override
      public net.onlinesequencer.player.protos.NoteTypeProto.NoteType getType() {
        @SuppressWarnings("deprecation")
        net.onlinesequencer.player.protos.NoteTypeProto.NoteType result = net.onlinesequencer.player.protos.NoteTypeProto.NoteType.valueOf(type_);
        return result == null ? net.onlinesequencer.player.protos.NoteTypeProto.NoteType.UNRECOGNIZED : result;
      }
      /**
       * <code>.NoteType type = 1;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(net.onlinesequencer.player.protos.NoteTypeProto.NoteType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.NoteType type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private float time_ ;
      /**
       * <code>float time = 2;</code>
       * @return The time.
       */
      @java.lang.Override
      public float getTime() {
        return time_;
      }
      /**
       * <code>float time = 2;</code>
       * @param value The time to set.
       * @return This builder for chaining.
       */
      public Builder setTime(float value) {
        
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float time = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTime() {
        
        time_ = 0F;
        onChanged();
        return this;
      }

      private float length_ ;
      /**
       * <code>float length = 3;</code>
       * @return The length.
       */
      @java.lang.Override
      public float getLength() {
        return length_;
      }
      /**
       * <code>float length = 3;</code>
       * @param value The length to set.
       * @return This builder for chaining.
       */
      public Builder setLength(float value) {
        
        length_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float length = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearLength() {
        
        length_ = 0F;
        onChanged();
        return this;
      }

      private int instrument_ ;
      /**
       * <code>int32 instrument = 4;</code>
       * @return The instrument.
       */
      @java.lang.Override
      public int getInstrument() {
        return instrument_;
      }
      /**
       * <code>int32 instrument = 4;</code>
       * @param value The instrument to set.
       * @return This builder for chaining.
       */
      public Builder setInstrument(int value) {
        
        instrument_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 instrument = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearInstrument() {
        
        instrument_ = 0;
        onChanged();
        return this;
      }

      private float volume_ ;
      /**
       * <code>float volume = 5;</code>
       * @return The volume.
       */
      @java.lang.Override
      public float getVolume() {
        return volume_;
      }
      /**
       * <code>float volume = 5;</code>
       * @param value The volume to set.
       * @return This builder for chaining.
       */
      public Builder setVolume(float value) {
        
        volume_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float volume = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearVolume() {
        
        volume_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Note)
    }

    // @@protoc_insertion_point(class_scope:Note)
    private static final net.onlinesequencer.player.protos.SequenceProto.Note DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.onlinesequencer.player.protos.SequenceProto.Note();
    }

    public static net.onlinesequencer.player.protos.SequenceProto.Note getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Note>
        PARSER = new com.google.protobuf.AbstractParser<Note>() {
      @java.lang.Override
      public Note parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Note> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Note> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.onlinesequencer.player.protos.SequenceProto.Note getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MarkerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Marker)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>float time = 1;</code>
     * @return The time.
     */
    float getTime();

    /**
     * <code>int32 setting = 2;</code>
     * @return The setting.
     */
    int getSetting();

    /**
     * <code>int32 instrument = 3;</code>
     * @return The instrument.
     */
    int getInstrument();

    /**
     * <code>float value = 4;</code>
     * @return The value.
     */
    float getValue();

    /**
     * <code>bool blend = 5;</code>
     * @return The blend.
     */
    boolean getBlend();
  }
  /**
   * Protobuf type {@code Marker}
   */
  public static final class Marker extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Marker)
      MarkerOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Marker.newBuilder() to construct.
    private Marker(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Marker() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Marker();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.onlinesequencer.player.protos.SequenceProto.internal_static_Marker_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.onlinesequencer.player.protos.SequenceProto.internal_static_Marker_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.onlinesequencer.player.protos.SequenceProto.Marker.class, net.onlinesequencer.player.protos.SequenceProto.Marker.Builder.class);
    }

    public static final int TIME_FIELD_NUMBER = 1;
    private float time_;
    /**
     * <code>float time = 1;</code>
     * @return The time.
     */
    @java.lang.Override
    public float getTime() {
      return time_;
    }

    public static final int SETTING_FIELD_NUMBER = 2;
    private int setting_;
    /**
     * <code>int32 setting = 2;</code>
     * @return The setting.
     */
    @java.lang.Override
    public int getSetting() {
      return setting_;
    }

    public static final int INSTRUMENT_FIELD_NUMBER = 3;
    private int instrument_;
    /**
     * <code>int32 instrument = 3;</code>
     * @return The instrument.
     */
    @java.lang.Override
    public int getInstrument() {
      return instrument_;
    }

    public static final int VALUE_FIELD_NUMBER = 4;
    private float value_;
    /**
     * <code>float value = 4;</code>
     * @return The value.
     */
    @java.lang.Override
    public float getValue() {
      return value_;
    }

    public static final int BLEND_FIELD_NUMBER = 5;
    private boolean blend_;
    /**
     * <code>bool blend = 5;</code>
     * @return The blend.
     */
    @java.lang.Override
    public boolean getBlend() {
      return blend_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (java.lang.Float.floatToRawIntBits(time_) != 0) {
        output.writeFloat(1, time_);
      }
      if (setting_ != 0) {
        output.writeInt32(2, setting_);
      }
      if (instrument_ != 0) {
        output.writeInt32(3, instrument_);
      }
      if (java.lang.Float.floatToRawIntBits(value_) != 0) {
        output.writeFloat(4, value_);
      }
      if (blend_ != false) {
        output.writeBool(5, blend_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (java.lang.Float.floatToRawIntBits(time_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, time_);
      }
      if (setting_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, setting_);
      }
      if (instrument_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, instrument_);
      }
      if (java.lang.Float.floatToRawIntBits(value_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, value_);
      }
      if (blend_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, blend_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.onlinesequencer.player.protos.SequenceProto.Marker)) {
        return super.equals(obj);
      }
      net.onlinesequencer.player.protos.SequenceProto.Marker other = (net.onlinesequencer.player.protos.SequenceProto.Marker) obj;

      if (java.lang.Float.floatToIntBits(getTime())
          != java.lang.Float.floatToIntBits(
              other.getTime())) return false;
      if (getSetting()
          != other.getSetting()) return false;
      if (getInstrument()
          != other.getInstrument()) return false;
      if (java.lang.Float.floatToIntBits(getValue())
          != java.lang.Float.floatToIntBits(
              other.getValue())) return false;
      if (getBlend()
          != other.getBlend()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TIME_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getTime());
      hash = (37 * hash) + SETTING_FIELD_NUMBER;
      hash = (53 * hash) + getSetting();
      hash = (37 * hash) + INSTRUMENT_FIELD_NUMBER;
      hash = (53 * hash) + getInstrument();
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getValue());
      hash = (37 * hash) + BLEND_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getBlend());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.onlinesequencer.player.protos.SequenceProto.Marker parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.Marker parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.Marker parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.Marker parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.Marker parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.Marker parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.Marker parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.Marker parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.Marker parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.Marker parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.Marker parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.Marker parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.onlinesequencer.player.protos.SequenceProto.Marker prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Marker}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Marker)
        net.onlinesequencer.player.protos.SequenceProto.MarkerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.onlinesequencer.player.protos.SequenceProto.internal_static_Marker_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.onlinesequencer.player.protos.SequenceProto.internal_static_Marker_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.onlinesequencer.player.protos.SequenceProto.Marker.class, net.onlinesequencer.player.protos.SequenceProto.Marker.Builder.class);
      }

      // Construct using net.onlinesequencer.player.protos.SequenceProto.Marker.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        time_ = 0F;

        setting_ = 0;

        instrument_ = 0;

        value_ = 0F;

        blend_ = false;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.onlinesequencer.player.protos.SequenceProto.internal_static_Marker_descriptor;
      }

      @java.lang.Override
      public net.onlinesequencer.player.protos.SequenceProto.Marker getDefaultInstanceForType() {
        return net.onlinesequencer.player.protos.SequenceProto.Marker.getDefaultInstance();
      }

      @java.lang.Override
      public net.onlinesequencer.player.protos.SequenceProto.Marker build() {
        net.onlinesequencer.player.protos.SequenceProto.Marker result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.onlinesequencer.player.protos.SequenceProto.Marker buildPartial() {
        net.onlinesequencer.player.protos.SequenceProto.Marker result = new net.onlinesequencer.player.protos.SequenceProto.Marker(this);
        result.time_ = time_;
        result.setting_ = setting_;
        result.instrument_ = instrument_;
        result.value_ = value_;
        result.blend_ = blend_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.onlinesequencer.player.protos.SequenceProto.Marker) {
          return mergeFrom((net.onlinesequencer.player.protos.SequenceProto.Marker)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.onlinesequencer.player.protos.SequenceProto.Marker other) {
        if (other == net.onlinesequencer.player.protos.SequenceProto.Marker.getDefaultInstance()) return this;
        if (other.getTime() != 0F) {
          setTime(other.getTime());
        }
        if (other.getSetting() != 0) {
          setSetting(other.getSetting());
        }
        if (other.getInstrument() != 0) {
          setInstrument(other.getInstrument());
        }
        if (other.getValue() != 0F) {
          setValue(other.getValue());
        }
        if (other.getBlend() != false) {
          setBlend(other.getBlend());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 13: {
                time_ = input.readFloat();

                break;
              } // case 13
              case 16: {
                setting_ = input.readInt32();

                break;
              } // case 16
              case 24: {
                instrument_ = input.readInt32();

                break;
              } // case 24
              case 37: {
                value_ = input.readFloat();

                break;
              } // case 37
              case 40: {
                blend_ = input.readBool();

                break;
              } // case 40
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private float time_ ;
      /**
       * <code>float time = 1;</code>
       * @return The time.
       */
      @java.lang.Override
      public float getTime() {
        return time_;
      }
      /**
       * <code>float time = 1;</code>
       * @param value The time to set.
       * @return This builder for chaining.
       */
      public Builder setTime(float value) {
        
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float time = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTime() {
        
        time_ = 0F;
        onChanged();
        return this;
      }

      private int setting_ ;
      /**
       * <code>int32 setting = 2;</code>
       * @return The setting.
       */
      @java.lang.Override
      public int getSetting() {
        return setting_;
      }
      /**
       * <code>int32 setting = 2;</code>
       * @param value The setting to set.
       * @return This builder for chaining.
       */
      public Builder setSetting(int value) {
        
        setting_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 setting = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSetting() {
        
        setting_ = 0;
        onChanged();
        return this;
      }

      private int instrument_ ;
      /**
       * <code>int32 instrument = 3;</code>
       * @return The instrument.
       */
      @java.lang.Override
      public int getInstrument() {
        return instrument_;
      }
      /**
       * <code>int32 instrument = 3;</code>
       * @param value The instrument to set.
       * @return This builder for chaining.
       */
      public Builder setInstrument(int value) {
        
        instrument_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 instrument = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearInstrument() {
        
        instrument_ = 0;
        onChanged();
        return this;
      }

      private float value_ ;
      /**
       * <code>float value = 4;</code>
       * @return The value.
       */
      @java.lang.Override
      public float getValue() {
        return value_;
      }
      /**
       * <code>float value = 4;</code>
       * @param value The value to set.
       * @return This builder for chaining.
       */
      public Builder setValue(float value) {
        
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float value = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearValue() {
        
        value_ = 0F;
        onChanged();
        return this;
      }

      private boolean blend_ ;
      /**
       * <code>bool blend = 5;</code>
       * @return The blend.
       */
      @java.lang.Override
      public boolean getBlend() {
        return blend_;
      }
      /**
       * <code>bool blend = 5;</code>
       * @param value The blend to set.
       * @return This builder for chaining.
       */
      public Builder setBlend(boolean value) {
        
        blend_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool blend = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearBlend() {
        
        blend_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Marker)
    }

    // @@protoc_insertion_point(class_scope:Marker)
    private static final net.onlinesequencer.player.protos.SequenceProto.Marker DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.onlinesequencer.player.protos.SequenceProto.Marker();
    }

    public static net.onlinesequencer.player.protos.SequenceProto.Marker getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Marker>
        PARSER = new com.google.protobuf.AbstractParser<Marker>() {
      @java.lang.Override
      public Marker parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Marker> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Marker> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.onlinesequencer.player.protos.SequenceProto.Marker getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface InstrumentSettingsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:InstrumentSettings)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>float volume = 1;</code>
     * @return The volume.
     */
    float getVolume();

    /**
     * <code>bool delay = 2;</code>
     * @return The delay.
     */
    boolean getDelay();

    /**
     * <code>bool reverb = 3;</code>
     * @return The reverb.
     */
    boolean getReverb();

    /**
     * <code>int32 reverb_type = 10;</code>
     * @return The reverbType.
     */
    int getReverbType();

    /**
     * <pre>
     * Storing volume as (1 - volume) so it defaults to volume=1.
     * </pre>
     *
     * <code>float one_minus_reverb_volume = 11;</code>
     * @return The oneMinusReverbVolume.
     */
    float getOneMinusReverbVolume();

    /**
     * <code>float pan = 4;</code>
     * @return The pan.
     */
    float getPan();

    /**
     * <code>bool enable_eq = 5;</code>
     * @return The enableEq.
     */
    boolean getEnableEq();

    /**
     * <code>float eq_low = 6;</code>
     * @return The eqLow.
     */
    float getEqLow();

    /**
     * <code>float eq_mid = 7;</code>
     * @return The eqMid.
     */
    float getEqMid();

    /**
     * <code>float eq_high = 8;</code>
     * @return The eqHigh.
     */
    float getEqHigh();

    /**
     * <code>float detune = 9;</code>
     * @return The detune.
     */
    float getDetune();

    /**
     * <code>int32 distort_type = 12;</code>
     * @return The distortType.
     */
    int getDistortType();

    /**
     * <code>float distort_volume = 13;</code>
     * @return The distortVolume.
     */
    float getDistortVolume();

    /**
     * <code>string name = 15;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <code>string name = 15;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>float fade_time = 16;</code>
     * @return The fadeTime.
     */
    float getFadeTime();

    /**
     * <code>uint32 color = 17;</code>
     * @return The color.
     */
    int getColor();

    /**
     * <pre>
     * Present for synthesizers
     * </pre>
     *
     * <code>.Synth synth = 14;</code>
     * @return Whether the synth field is set.
     */
    boolean hasSynth();
    /**
     * <pre>
     * Present for synthesizers
     * </pre>
     *
     * <code>.Synth synth = 14;</code>
     * @return The synth.
     */
    net.onlinesequencer.player.protos.SequenceProto.Synth getSynth();
    /**
     * <pre>
     * Present for synthesizers
     * </pre>
     *
     * <code>.Synth synth = 14;</code>
     */
    net.onlinesequencer.player.protos.SequenceProto.SynthOrBuilder getSynthOrBuilder();
  }
  /**
   * Protobuf type {@code InstrumentSettings}
   */
  public static final class InstrumentSettings extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:InstrumentSettings)
      InstrumentSettingsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use InstrumentSettings.newBuilder() to construct.
    private InstrumentSettings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private InstrumentSettings() {
      name_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new InstrumentSettings();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.onlinesequencer.player.protos.SequenceProto.internal_static_InstrumentSettings_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.onlinesequencer.player.protos.SequenceProto.internal_static_InstrumentSettings_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings.class, net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings.Builder.class);
    }

    public static final int VOLUME_FIELD_NUMBER = 1;
    private float volume_;
    /**
     * <code>float volume = 1;</code>
     * @return The volume.
     */
    @java.lang.Override
    public float getVolume() {
      return volume_;
    }

    public static final int DELAY_FIELD_NUMBER = 2;
    private boolean delay_;
    /**
     * <code>bool delay = 2;</code>
     * @return The delay.
     */
    @java.lang.Override
    public boolean getDelay() {
      return delay_;
    }

    public static final int REVERB_FIELD_NUMBER = 3;
    private boolean reverb_;
    /**
     * <code>bool reverb = 3;</code>
     * @return The reverb.
     */
    @java.lang.Override
    public boolean getReverb() {
      return reverb_;
    }

    public static final int REVERB_TYPE_FIELD_NUMBER = 10;
    private int reverbType_;
    /**
     * <code>int32 reverb_type = 10;</code>
     * @return The reverbType.
     */
    @java.lang.Override
    public int getReverbType() {
      return reverbType_;
    }

    public static final int ONE_MINUS_REVERB_VOLUME_FIELD_NUMBER = 11;
    private float oneMinusReverbVolume_;
    /**
     * <pre>
     * Storing volume as (1 - volume) so it defaults to volume=1.
     * </pre>
     *
     * <code>float one_minus_reverb_volume = 11;</code>
     * @return The oneMinusReverbVolume.
     */
    @java.lang.Override
    public float getOneMinusReverbVolume() {
      return oneMinusReverbVolume_;
    }

    public static final int PAN_FIELD_NUMBER = 4;
    private float pan_;
    /**
     * <code>float pan = 4;</code>
     * @return The pan.
     */
    @java.lang.Override
    public float getPan() {
      return pan_;
    }

    public static final int ENABLE_EQ_FIELD_NUMBER = 5;
    private boolean enableEq_;
    /**
     * <code>bool enable_eq = 5;</code>
     * @return The enableEq.
     */
    @java.lang.Override
    public boolean getEnableEq() {
      return enableEq_;
    }

    public static final int EQ_LOW_FIELD_NUMBER = 6;
    private float eqLow_;
    /**
     * <code>float eq_low = 6;</code>
     * @return The eqLow.
     */
    @java.lang.Override
    public float getEqLow() {
      return eqLow_;
    }

    public static final int EQ_MID_FIELD_NUMBER = 7;
    private float eqMid_;
    /**
     * <code>float eq_mid = 7;</code>
     * @return The eqMid.
     */
    @java.lang.Override
    public float getEqMid() {
      return eqMid_;
    }

    public static final int EQ_HIGH_FIELD_NUMBER = 8;
    private float eqHigh_;
    /**
     * <code>float eq_high = 8;</code>
     * @return The eqHigh.
     */
    @java.lang.Override
    public float getEqHigh() {
      return eqHigh_;
    }

    public static final int DETUNE_FIELD_NUMBER = 9;
    private float detune_;
    /**
     * <code>float detune = 9;</code>
     * @return The detune.
     */
    @java.lang.Override
    public float getDetune() {
      return detune_;
    }

    public static final int DISTORT_TYPE_FIELD_NUMBER = 12;
    private int distortType_;
    /**
     * <code>int32 distort_type = 12;</code>
     * @return The distortType.
     */
    @java.lang.Override
    public int getDistortType() {
      return distortType_;
    }

    public static final int DISTORT_VOLUME_FIELD_NUMBER = 13;
    private float distortVolume_;
    /**
     * <code>float distort_volume = 13;</code>
     * @return The distortVolume.
     */
    @java.lang.Override
    public float getDistortVolume() {
      return distortVolume_;
    }

    public static final int NAME_FIELD_NUMBER = 15;
    private volatile java.lang.Object name_;
    /**
     * <code>string name = 15;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 15;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FADE_TIME_FIELD_NUMBER = 16;
    private float fadeTime_;
    /**
     * <code>float fade_time = 16;</code>
     * @return The fadeTime.
     */
    @java.lang.Override
    public float getFadeTime() {
      return fadeTime_;
    }

    public static final int COLOR_FIELD_NUMBER = 17;
    private int color_;
    /**
     * <code>uint32 color = 17;</code>
     * @return The color.
     */
    @java.lang.Override
    public int getColor() {
      return color_;
    }

    public static final int SYNTH_FIELD_NUMBER = 14;
    private net.onlinesequencer.player.protos.SequenceProto.Synth synth_;
    /**
     * <pre>
     * Present for synthesizers
     * </pre>
     *
     * <code>.Synth synth = 14;</code>
     * @return Whether the synth field is set.
     */
    @java.lang.Override
    public boolean hasSynth() {
      return synth_ != null;
    }
    /**
     * <pre>
     * Present for synthesizers
     * </pre>
     *
     * <code>.Synth synth = 14;</code>
     * @return The synth.
     */
    @java.lang.Override
    public net.onlinesequencer.player.protos.SequenceProto.Synth getSynth() {
      return synth_ == null ? net.onlinesequencer.player.protos.SequenceProto.Synth.getDefaultInstance() : synth_;
    }
    /**
     * <pre>
     * Present for synthesizers
     * </pre>
     *
     * <code>.Synth synth = 14;</code>
     */
    @java.lang.Override
    public net.onlinesequencer.player.protos.SequenceProto.SynthOrBuilder getSynthOrBuilder() {
      return getSynth();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (java.lang.Float.floatToRawIntBits(volume_) != 0) {
        output.writeFloat(1, volume_);
      }
      if (delay_ != false) {
        output.writeBool(2, delay_);
      }
      if (reverb_ != false) {
        output.writeBool(3, reverb_);
      }
      if (java.lang.Float.floatToRawIntBits(pan_) != 0) {
        output.writeFloat(4, pan_);
      }
      if (enableEq_ != false) {
        output.writeBool(5, enableEq_);
      }
      if (java.lang.Float.floatToRawIntBits(eqLow_) != 0) {
        output.writeFloat(6, eqLow_);
      }
      if (java.lang.Float.floatToRawIntBits(eqMid_) != 0) {
        output.writeFloat(7, eqMid_);
      }
      if (java.lang.Float.floatToRawIntBits(eqHigh_) != 0) {
        output.writeFloat(8, eqHigh_);
      }
      if (java.lang.Float.floatToRawIntBits(detune_) != 0) {
        output.writeFloat(9, detune_);
      }
      if (reverbType_ != 0) {
        output.writeInt32(10, reverbType_);
      }
      if (java.lang.Float.floatToRawIntBits(oneMinusReverbVolume_) != 0) {
        output.writeFloat(11, oneMinusReverbVolume_);
      }
      if (distortType_ != 0) {
        output.writeInt32(12, distortType_);
      }
      if (java.lang.Float.floatToRawIntBits(distortVolume_) != 0) {
        output.writeFloat(13, distortVolume_);
      }
      if (synth_ != null) {
        output.writeMessage(14, getSynth());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 15, name_);
      }
      if (java.lang.Float.floatToRawIntBits(fadeTime_) != 0) {
        output.writeFloat(16, fadeTime_);
      }
      if (color_ != 0) {
        output.writeUInt32(17, color_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (java.lang.Float.floatToRawIntBits(volume_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, volume_);
      }
      if (delay_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, delay_);
      }
      if (reverb_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, reverb_);
      }
      if (java.lang.Float.floatToRawIntBits(pan_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, pan_);
      }
      if (enableEq_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, enableEq_);
      }
      if (java.lang.Float.floatToRawIntBits(eqLow_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, eqLow_);
      }
      if (java.lang.Float.floatToRawIntBits(eqMid_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, eqMid_);
      }
      if (java.lang.Float.floatToRawIntBits(eqHigh_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, eqHigh_);
      }
      if (java.lang.Float.floatToRawIntBits(detune_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, detune_);
      }
      if (reverbType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, reverbType_);
      }
      if (java.lang.Float.floatToRawIntBits(oneMinusReverbVolume_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(11, oneMinusReverbVolume_);
      }
      if (distortType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, distortType_);
      }
      if (java.lang.Float.floatToRawIntBits(distortVolume_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(13, distortVolume_);
      }
      if (synth_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, getSynth());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(15, name_);
      }
      if (java.lang.Float.floatToRawIntBits(fadeTime_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(16, fadeTime_);
      }
      if (color_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(17, color_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings)) {
        return super.equals(obj);
      }
      net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings other = (net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings) obj;

      if (java.lang.Float.floatToIntBits(getVolume())
          != java.lang.Float.floatToIntBits(
              other.getVolume())) return false;
      if (getDelay()
          != other.getDelay()) return false;
      if (getReverb()
          != other.getReverb()) return false;
      if (getReverbType()
          != other.getReverbType()) return false;
      if (java.lang.Float.floatToIntBits(getOneMinusReverbVolume())
          != java.lang.Float.floatToIntBits(
              other.getOneMinusReverbVolume())) return false;
      if (java.lang.Float.floatToIntBits(getPan())
          != java.lang.Float.floatToIntBits(
              other.getPan())) return false;
      if (getEnableEq()
          != other.getEnableEq()) return false;
      if (java.lang.Float.floatToIntBits(getEqLow())
          != java.lang.Float.floatToIntBits(
              other.getEqLow())) return false;
      if (java.lang.Float.floatToIntBits(getEqMid())
          != java.lang.Float.floatToIntBits(
              other.getEqMid())) return false;
      if (java.lang.Float.floatToIntBits(getEqHigh())
          != java.lang.Float.floatToIntBits(
              other.getEqHigh())) return false;
      if (java.lang.Float.floatToIntBits(getDetune())
          != java.lang.Float.floatToIntBits(
              other.getDetune())) return false;
      if (getDistortType()
          != other.getDistortType()) return false;
      if (java.lang.Float.floatToIntBits(getDistortVolume())
          != java.lang.Float.floatToIntBits(
              other.getDistortVolume())) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (java.lang.Float.floatToIntBits(getFadeTime())
          != java.lang.Float.floatToIntBits(
              other.getFadeTime())) return false;
      if (getColor()
          != other.getColor()) return false;
      if (hasSynth() != other.hasSynth()) return false;
      if (hasSynth()) {
        if (!getSynth()
            .equals(other.getSynth())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + VOLUME_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getVolume());
      hash = (37 * hash) + DELAY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getDelay());
      hash = (37 * hash) + REVERB_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getReverb());
      hash = (37 * hash) + REVERB_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getReverbType();
      hash = (37 * hash) + ONE_MINUS_REVERB_VOLUME_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getOneMinusReverbVolume());
      hash = (37 * hash) + PAN_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getPan());
      hash = (37 * hash) + ENABLE_EQ_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getEnableEq());
      hash = (37 * hash) + EQ_LOW_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getEqLow());
      hash = (37 * hash) + EQ_MID_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getEqMid());
      hash = (37 * hash) + EQ_HIGH_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getEqHigh());
      hash = (37 * hash) + DETUNE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getDetune());
      hash = (37 * hash) + DISTORT_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getDistortType();
      hash = (37 * hash) + DISTORT_VOLUME_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getDistortVolume());
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + FADE_TIME_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getFadeTime());
      hash = (37 * hash) + COLOR_FIELD_NUMBER;
      hash = (53 * hash) + getColor();
      if (hasSynth()) {
        hash = (37 * hash) + SYNTH_FIELD_NUMBER;
        hash = (53 * hash) + getSynth().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code InstrumentSettings}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:InstrumentSettings)
        net.onlinesequencer.player.protos.SequenceProto.InstrumentSettingsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.onlinesequencer.player.protos.SequenceProto.internal_static_InstrumentSettings_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.onlinesequencer.player.protos.SequenceProto.internal_static_InstrumentSettings_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings.class, net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings.Builder.class);
      }

      // Construct using net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        volume_ = 0F;

        delay_ = false;

        reverb_ = false;

        reverbType_ = 0;

        oneMinusReverbVolume_ = 0F;

        pan_ = 0F;

        enableEq_ = false;

        eqLow_ = 0F;

        eqMid_ = 0F;

        eqHigh_ = 0F;

        detune_ = 0F;

        distortType_ = 0;

        distortVolume_ = 0F;

        name_ = "";

        fadeTime_ = 0F;

        color_ = 0;

        if (synthBuilder_ == null) {
          synth_ = null;
        } else {
          synth_ = null;
          synthBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.onlinesequencer.player.protos.SequenceProto.internal_static_InstrumentSettings_descriptor;
      }

      @java.lang.Override
      public net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings getDefaultInstanceForType() {
        return net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings.getDefaultInstance();
      }

      @java.lang.Override
      public net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings build() {
        net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings buildPartial() {
        net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings result = new net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings(this);
        result.volume_ = volume_;
        result.delay_ = delay_;
        result.reverb_ = reverb_;
        result.reverbType_ = reverbType_;
        result.oneMinusReverbVolume_ = oneMinusReverbVolume_;
        result.pan_ = pan_;
        result.enableEq_ = enableEq_;
        result.eqLow_ = eqLow_;
        result.eqMid_ = eqMid_;
        result.eqHigh_ = eqHigh_;
        result.detune_ = detune_;
        result.distortType_ = distortType_;
        result.distortVolume_ = distortVolume_;
        result.name_ = name_;
        result.fadeTime_ = fadeTime_;
        result.color_ = color_;
        if (synthBuilder_ == null) {
          result.synth_ = synth_;
        } else {
          result.synth_ = synthBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings) {
          return mergeFrom((net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings other) {
        if (other == net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings.getDefaultInstance()) return this;
        if (other.getVolume() != 0F) {
          setVolume(other.getVolume());
        }
        if (other.getDelay() != false) {
          setDelay(other.getDelay());
        }
        if (other.getReverb() != false) {
          setReverb(other.getReverb());
        }
        if (other.getReverbType() != 0) {
          setReverbType(other.getReverbType());
        }
        if (other.getOneMinusReverbVolume() != 0F) {
          setOneMinusReverbVolume(other.getOneMinusReverbVolume());
        }
        if (other.getPan() != 0F) {
          setPan(other.getPan());
        }
        if (other.getEnableEq() != false) {
          setEnableEq(other.getEnableEq());
        }
        if (other.getEqLow() != 0F) {
          setEqLow(other.getEqLow());
        }
        if (other.getEqMid() != 0F) {
          setEqMid(other.getEqMid());
        }
        if (other.getEqHigh() != 0F) {
          setEqHigh(other.getEqHigh());
        }
        if (other.getDetune() != 0F) {
          setDetune(other.getDetune());
        }
        if (other.getDistortType() != 0) {
          setDistortType(other.getDistortType());
        }
        if (other.getDistortVolume() != 0F) {
          setDistortVolume(other.getDistortVolume());
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.getFadeTime() != 0F) {
          setFadeTime(other.getFadeTime());
        }
        if (other.getColor() != 0) {
          setColor(other.getColor());
        }
        if (other.hasSynth()) {
          mergeSynth(other.getSynth());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 13: {
                volume_ = input.readFloat();

                break;
              } // case 13
              case 16: {
                delay_ = input.readBool();

                break;
              } // case 16
              case 24: {
                reverb_ = input.readBool();

                break;
              } // case 24
              case 37: {
                pan_ = input.readFloat();

                break;
              } // case 37
              case 40: {
                enableEq_ = input.readBool();

                break;
              } // case 40
              case 53: {
                eqLow_ = input.readFloat();

                break;
              } // case 53
              case 61: {
                eqMid_ = input.readFloat();

                break;
              } // case 61
              case 69: {
                eqHigh_ = input.readFloat();

                break;
              } // case 69
              case 77: {
                detune_ = input.readFloat();

                break;
              } // case 77
              case 80: {
                reverbType_ = input.readInt32();

                break;
              } // case 80
              case 93: {
                oneMinusReverbVolume_ = input.readFloat();

                break;
              } // case 93
              case 96: {
                distortType_ = input.readInt32();

                break;
              } // case 96
              case 109: {
                distortVolume_ = input.readFloat();

                break;
              } // case 109
              case 114: {
                input.readMessage(
                    getSynthFieldBuilder().getBuilder(),
                    extensionRegistry);

                break;
              } // case 114
              case 122: {
                name_ = input.readStringRequireUtf8();

                break;
              } // case 122
              case 133: {
                fadeTime_ = input.readFloat();

                break;
              } // case 133
              case 136: {
                color_ = input.readUInt32();

                break;
              } // case 136
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private float volume_ ;
      /**
       * <code>float volume = 1;</code>
       * @return The volume.
       */
      @java.lang.Override
      public float getVolume() {
        return volume_;
      }
      /**
       * <code>float volume = 1;</code>
       * @param value The volume to set.
       * @return This builder for chaining.
       */
      public Builder setVolume(float value) {
        
        volume_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float volume = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearVolume() {
        
        volume_ = 0F;
        onChanged();
        return this;
      }

      private boolean delay_ ;
      /**
       * <code>bool delay = 2;</code>
       * @return The delay.
       */
      @java.lang.Override
      public boolean getDelay() {
        return delay_;
      }
      /**
       * <code>bool delay = 2;</code>
       * @param value The delay to set.
       * @return This builder for chaining.
       */
      public Builder setDelay(boolean value) {
        
        delay_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool delay = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearDelay() {
        
        delay_ = false;
        onChanged();
        return this;
      }

      private boolean reverb_ ;
      /**
       * <code>bool reverb = 3;</code>
       * @return The reverb.
       */
      @java.lang.Override
      public boolean getReverb() {
        return reverb_;
      }
      /**
       * <code>bool reverb = 3;</code>
       * @param value The reverb to set.
       * @return This builder for chaining.
       */
      public Builder setReverb(boolean value) {
        
        reverb_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool reverb = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearReverb() {
        
        reverb_ = false;
        onChanged();
        return this;
      }

      private int reverbType_ ;
      /**
       * <code>int32 reverb_type = 10;</code>
       * @return The reverbType.
       */
      @java.lang.Override
      public int getReverbType() {
        return reverbType_;
      }
      /**
       * <code>int32 reverb_type = 10;</code>
       * @param value The reverbType to set.
       * @return This builder for chaining.
       */
      public Builder setReverbType(int value) {
        
        reverbType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 reverb_type = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearReverbType() {
        
        reverbType_ = 0;
        onChanged();
        return this;
      }

      private float oneMinusReverbVolume_ ;
      /**
       * <pre>
       * Storing volume as (1 - volume) so it defaults to volume=1.
       * </pre>
       *
       * <code>float one_minus_reverb_volume = 11;</code>
       * @return The oneMinusReverbVolume.
       */
      @java.lang.Override
      public float getOneMinusReverbVolume() {
        return oneMinusReverbVolume_;
      }
      /**
       * <pre>
       * Storing volume as (1 - volume) so it defaults to volume=1.
       * </pre>
       *
       * <code>float one_minus_reverb_volume = 11;</code>
       * @param value The oneMinusReverbVolume to set.
       * @return This builder for chaining.
       */
      public Builder setOneMinusReverbVolume(float value) {
        
        oneMinusReverbVolume_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Storing volume as (1 - volume) so it defaults to volume=1.
       * </pre>
       *
       * <code>float one_minus_reverb_volume = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearOneMinusReverbVolume() {
        
        oneMinusReverbVolume_ = 0F;
        onChanged();
        return this;
      }

      private float pan_ ;
      /**
       * <code>float pan = 4;</code>
       * @return The pan.
       */
      @java.lang.Override
      public float getPan() {
        return pan_;
      }
      /**
       * <code>float pan = 4;</code>
       * @param value The pan to set.
       * @return This builder for chaining.
       */
      public Builder setPan(float value) {
        
        pan_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float pan = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearPan() {
        
        pan_ = 0F;
        onChanged();
        return this;
      }

      private boolean enableEq_ ;
      /**
       * <code>bool enable_eq = 5;</code>
       * @return The enableEq.
       */
      @java.lang.Override
      public boolean getEnableEq() {
        return enableEq_;
      }
      /**
       * <code>bool enable_eq = 5;</code>
       * @param value The enableEq to set.
       * @return This builder for chaining.
       */
      public Builder setEnableEq(boolean value) {
        
        enableEq_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool enable_eq = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearEnableEq() {
        
        enableEq_ = false;
        onChanged();
        return this;
      }

      private float eqLow_ ;
      /**
       * <code>float eq_low = 6;</code>
       * @return The eqLow.
       */
      @java.lang.Override
      public float getEqLow() {
        return eqLow_;
      }
      /**
       * <code>float eq_low = 6;</code>
       * @param value The eqLow to set.
       * @return This builder for chaining.
       */
      public Builder setEqLow(float value) {
        
        eqLow_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float eq_low = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearEqLow() {
        
        eqLow_ = 0F;
        onChanged();
        return this;
      }

      private float eqMid_ ;
      /**
       * <code>float eq_mid = 7;</code>
       * @return The eqMid.
       */
      @java.lang.Override
      public float getEqMid() {
        return eqMid_;
      }
      /**
       * <code>float eq_mid = 7;</code>
       * @param value The eqMid to set.
       * @return This builder for chaining.
       */
      public Builder setEqMid(float value) {
        
        eqMid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float eq_mid = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearEqMid() {
        
        eqMid_ = 0F;
        onChanged();
        return this;
      }

      private float eqHigh_ ;
      /**
       * <code>float eq_high = 8;</code>
       * @return The eqHigh.
       */
      @java.lang.Override
      public float getEqHigh() {
        return eqHigh_;
      }
      /**
       * <code>float eq_high = 8;</code>
       * @param value The eqHigh to set.
       * @return This builder for chaining.
       */
      public Builder setEqHigh(float value) {
        
        eqHigh_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float eq_high = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearEqHigh() {
        
        eqHigh_ = 0F;
        onChanged();
        return this;
      }

      private float detune_ ;
      /**
       * <code>float detune = 9;</code>
       * @return The detune.
       */
      @java.lang.Override
      public float getDetune() {
        return detune_;
      }
      /**
       * <code>float detune = 9;</code>
       * @param value The detune to set.
       * @return This builder for chaining.
       */
      public Builder setDetune(float value) {
        
        detune_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float detune = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearDetune() {
        
        detune_ = 0F;
        onChanged();
        return this;
      }

      private int distortType_ ;
      /**
       * <code>int32 distort_type = 12;</code>
       * @return The distortType.
       */
      @java.lang.Override
      public int getDistortType() {
        return distortType_;
      }
      /**
       * <code>int32 distort_type = 12;</code>
       * @param value The distortType to set.
       * @return This builder for chaining.
       */
      public Builder setDistortType(int value) {
        
        distortType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 distort_type = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearDistortType() {
        
        distortType_ = 0;
        onChanged();
        return this;
      }

      private float distortVolume_ ;
      /**
       * <code>float distort_volume = 13;</code>
       * @return The distortVolume.
       */
      @java.lang.Override
      public float getDistortVolume() {
        return distortVolume_;
      }
      /**
       * <code>float distort_volume = 13;</code>
       * @param value The distortVolume to set.
       * @return This builder for chaining.
       */
      public Builder setDistortVolume(float value) {
        
        distortVolume_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float distort_volume = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearDistortVolume() {
        
        distortVolume_ = 0F;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <code>string name = 15;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string name = 15;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 15;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>string name = 15;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private float fadeTime_ ;
      /**
       * <code>float fade_time = 16;</code>
       * @return The fadeTime.
       */
      @java.lang.Override
      public float getFadeTime() {
        return fadeTime_;
      }
      /**
       * <code>float fade_time = 16;</code>
       * @param value The fadeTime to set.
       * @return This builder for chaining.
       */
      public Builder setFadeTime(float value) {
        
        fadeTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float fade_time = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearFadeTime() {
        
        fadeTime_ = 0F;
        onChanged();
        return this;
      }

      private int color_ ;
      /**
       * <code>uint32 color = 17;</code>
       * @return The color.
       */
      @java.lang.Override
      public int getColor() {
        return color_;
      }
      /**
       * <code>uint32 color = 17;</code>
       * @param value The color to set.
       * @return This builder for chaining.
       */
      public Builder setColor(int value) {
        
        color_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 color = 17;</code>
       * @return This builder for chaining.
       */
      public Builder clearColor() {
        
        color_ = 0;
        onChanged();
        return this;
      }

      private net.onlinesequencer.player.protos.SequenceProto.Synth synth_;
      private com.google.protobuf.SingleFieldBuilderV3<
          net.onlinesequencer.player.protos.SequenceProto.Synth, net.onlinesequencer.player.protos.SequenceProto.Synth.Builder, net.onlinesequencer.player.protos.SequenceProto.SynthOrBuilder> synthBuilder_;
      /**
       * <pre>
       * Present for synthesizers
       * </pre>
       *
       * <code>.Synth synth = 14;</code>
       * @return Whether the synth field is set.
       */
      public boolean hasSynth() {
        return synthBuilder_ != null || synth_ != null;
      }
      /**
       * <pre>
       * Present for synthesizers
       * </pre>
       *
       * <code>.Synth synth = 14;</code>
       * @return The synth.
       */
      public net.onlinesequencer.player.protos.SequenceProto.Synth getSynth() {
        if (synthBuilder_ == null) {
          return synth_ == null ? net.onlinesequencer.player.protos.SequenceProto.Synth.getDefaultInstance() : synth_;
        } else {
          return synthBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Present for synthesizers
       * </pre>
       *
       * <code>.Synth synth = 14;</code>
       */
      public Builder setSynth(net.onlinesequencer.player.protos.SequenceProto.Synth value) {
        if (synthBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          synth_ = value;
          onChanged();
        } else {
          synthBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Present for synthesizers
       * </pre>
       *
       * <code>.Synth synth = 14;</code>
       */
      public Builder setSynth(
          net.onlinesequencer.player.protos.SequenceProto.Synth.Builder builderForValue) {
        if (synthBuilder_ == null) {
          synth_ = builderForValue.build();
          onChanged();
        } else {
          synthBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Present for synthesizers
       * </pre>
       *
       * <code>.Synth synth = 14;</code>
       */
      public Builder mergeSynth(net.onlinesequencer.player.protos.SequenceProto.Synth value) {
        if (synthBuilder_ == null) {
          if (synth_ != null) {
            synth_ =
              net.onlinesequencer.player.protos.SequenceProto.Synth.newBuilder(synth_).mergeFrom(value).buildPartial();
          } else {
            synth_ = value;
          }
          onChanged();
        } else {
          synthBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Present for synthesizers
       * </pre>
       *
       * <code>.Synth synth = 14;</code>
       */
      public Builder clearSynth() {
        if (synthBuilder_ == null) {
          synth_ = null;
          onChanged();
        } else {
          synth_ = null;
          synthBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Present for synthesizers
       * </pre>
       *
       * <code>.Synth synth = 14;</code>
       */
      public net.onlinesequencer.player.protos.SequenceProto.Synth.Builder getSynthBuilder() {
        
        onChanged();
        return getSynthFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Present for synthesizers
       * </pre>
       *
       * <code>.Synth synth = 14;</code>
       */
      public net.onlinesequencer.player.protos.SequenceProto.SynthOrBuilder getSynthOrBuilder() {
        if (synthBuilder_ != null) {
          return synthBuilder_.getMessageOrBuilder();
        } else {
          return synth_ == null ?
              net.onlinesequencer.player.protos.SequenceProto.Synth.getDefaultInstance() : synth_;
        }
      }
      /**
       * <pre>
       * Present for synthesizers
       * </pre>
       *
       * <code>.Synth synth = 14;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          net.onlinesequencer.player.protos.SequenceProto.Synth, net.onlinesequencer.player.protos.SequenceProto.Synth.Builder, net.onlinesequencer.player.protos.SequenceProto.SynthOrBuilder> 
          getSynthFieldBuilder() {
        if (synthBuilder_ == null) {
          synthBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              net.onlinesequencer.player.protos.SequenceProto.Synth, net.onlinesequencer.player.protos.SequenceProto.Synth.Builder, net.onlinesequencer.player.protos.SequenceProto.SynthOrBuilder>(
                  getSynth(),
                  getParentForChildren(),
                  isClean());
          synth_ = null;
        }
        return synthBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:InstrumentSettings)
    }

    // @@protoc_insertion_point(class_scope:InstrumentSettings)
    private static final net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings();
    }

    public static net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<InstrumentSettings>
        PARSER = new com.google.protobuf.AbstractParser<InstrumentSettings>() {
      @java.lang.Override
      public InstrumentSettings parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<InstrumentSettings> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<InstrumentSettings> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EnvelopeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Envelope)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bool enabled = 1;</code>
     * @return The enabled.
     */
    boolean getEnabled();

    /**
     * <code>float attack = 2;</code>
     * @return The attack.
     */
    float getAttack();

    /**
     * <code>float hold = 3;</code>
     * @return The hold.
     */
    float getHold();

    /**
     * <code>float decay = 4;</code>
     * @return The decay.
     */
    float getDecay();

    /**
     * <code>float sustain = 5;</code>
     * @return The sustain.
     */
    float getSustain();

    /**
     * <code>float release = 6;</code>
     * @return The release.
     */
    float getRelease();
  }
  /**
   * Protobuf type {@code Envelope}
   */
  public static final class Envelope extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Envelope)
      EnvelopeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Envelope.newBuilder() to construct.
    private Envelope(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Envelope() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Envelope();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.onlinesequencer.player.protos.SequenceProto.internal_static_Envelope_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.onlinesequencer.player.protos.SequenceProto.internal_static_Envelope_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.onlinesequencer.player.protos.SequenceProto.Envelope.class, net.onlinesequencer.player.protos.SequenceProto.Envelope.Builder.class);
    }

    public static final int ENABLED_FIELD_NUMBER = 1;
    private boolean enabled_;
    /**
     * <code>bool enabled = 1;</code>
     * @return The enabled.
     */
    @java.lang.Override
    public boolean getEnabled() {
      return enabled_;
    }

    public static final int ATTACK_FIELD_NUMBER = 2;
    private float attack_;
    /**
     * <code>float attack = 2;</code>
     * @return The attack.
     */
    @java.lang.Override
    public float getAttack() {
      return attack_;
    }

    public static final int HOLD_FIELD_NUMBER = 3;
    private float hold_;
    /**
     * <code>float hold = 3;</code>
     * @return The hold.
     */
    @java.lang.Override
    public float getHold() {
      return hold_;
    }

    public static final int DECAY_FIELD_NUMBER = 4;
    private float decay_;
    /**
     * <code>float decay = 4;</code>
     * @return The decay.
     */
    @java.lang.Override
    public float getDecay() {
      return decay_;
    }

    public static final int SUSTAIN_FIELD_NUMBER = 5;
    private float sustain_;
    /**
     * <code>float sustain = 5;</code>
     * @return The sustain.
     */
    @java.lang.Override
    public float getSustain() {
      return sustain_;
    }

    public static final int RELEASE_FIELD_NUMBER = 6;
    private float release_;
    /**
     * <code>float release = 6;</code>
     * @return The release.
     */
    @java.lang.Override
    public float getRelease() {
      return release_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (enabled_ != false) {
        output.writeBool(1, enabled_);
      }
      if (java.lang.Float.floatToRawIntBits(attack_) != 0) {
        output.writeFloat(2, attack_);
      }
      if (java.lang.Float.floatToRawIntBits(hold_) != 0) {
        output.writeFloat(3, hold_);
      }
      if (java.lang.Float.floatToRawIntBits(decay_) != 0) {
        output.writeFloat(4, decay_);
      }
      if (java.lang.Float.floatToRawIntBits(sustain_) != 0) {
        output.writeFloat(5, sustain_);
      }
      if (java.lang.Float.floatToRawIntBits(release_) != 0) {
        output.writeFloat(6, release_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (enabled_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, enabled_);
      }
      if (java.lang.Float.floatToRawIntBits(attack_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, attack_);
      }
      if (java.lang.Float.floatToRawIntBits(hold_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, hold_);
      }
      if (java.lang.Float.floatToRawIntBits(decay_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, decay_);
      }
      if (java.lang.Float.floatToRawIntBits(sustain_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, sustain_);
      }
      if (java.lang.Float.floatToRawIntBits(release_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, release_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.onlinesequencer.player.protos.SequenceProto.Envelope)) {
        return super.equals(obj);
      }
      net.onlinesequencer.player.protos.SequenceProto.Envelope other = (net.onlinesequencer.player.protos.SequenceProto.Envelope) obj;

      if (getEnabled()
          != other.getEnabled()) return false;
      if (java.lang.Float.floatToIntBits(getAttack())
          != java.lang.Float.floatToIntBits(
              other.getAttack())) return false;
      if (java.lang.Float.floatToIntBits(getHold())
          != java.lang.Float.floatToIntBits(
              other.getHold())) return false;
      if (java.lang.Float.floatToIntBits(getDecay())
          != java.lang.Float.floatToIntBits(
              other.getDecay())) return false;
      if (java.lang.Float.floatToIntBits(getSustain())
          != java.lang.Float.floatToIntBits(
              other.getSustain())) return false;
      if (java.lang.Float.floatToIntBits(getRelease())
          != java.lang.Float.floatToIntBits(
              other.getRelease())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ENABLED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getEnabled());
      hash = (37 * hash) + ATTACK_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getAttack());
      hash = (37 * hash) + HOLD_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getHold());
      hash = (37 * hash) + DECAY_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getDecay());
      hash = (37 * hash) + SUSTAIN_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getSustain());
      hash = (37 * hash) + RELEASE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getRelease());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.onlinesequencer.player.protos.SequenceProto.Envelope parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.Envelope parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.Envelope parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.Envelope parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.Envelope parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.Envelope parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.Envelope parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.Envelope parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.Envelope parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.Envelope parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.Envelope parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.Envelope parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.onlinesequencer.player.protos.SequenceProto.Envelope prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Envelope}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Envelope)
        net.onlinesequencer.player.protos.SequenceProto.EnvelopeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.onlinesequencer.player.protos.SequenceProto.internal_static_Envelope_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.onlinesequencer.player.protos.SequenceProto.internal_static_Envelope_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.onlinesequencer.player.protos.SequenceProto.Envelope.class, net.onlinesequencer.player.protos.SequenceProto.Envelope.Builder.class);
      }

      // Construct using net.onlinesequencer.player.protos.SequenceProto.Envelope.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        enabled_ = false;

        attack_ = 0F;

        hold_ = 0F;

        decay_ = 0F;

        sustain_ = 0F;

        release_ = 0F;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.onlinesequencer.player.protos.SequenceProto.internal_static_Envelope_descriptor;
      }

      @java.lang.Override
      public net.onlinesequencer.player.protos.SequenceProto.Envelope getDefaultInstanceForType() {
        return net.onlinesequencer.player.protos.SequenceProto.Envelope.getDefaultInstance();
      }

      @java.lang.Override
      public net.onlinesequencer.player.protos.SequenceProto.Envelope build() {
        net.onlinesequencer.player.protos.SequenceProto.Envelope result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.onlinesequencer.player.protos.SequenceProto.Envelope buildPartial() {
        net.onlinesequencer.player.protos.SequenceProto.Envelope result = new net.onlinesequencer.player.protos.SequenceProto.Envelope(this);
        result.enabled_ = enabled_;
        result.attack_ = attack_;
        result.hold_ = hold_;
        result.decay_ = decay_;
        result.sustain_ = sustain_;
        result.release_ = release_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.onlinesequencer.player.protos.SequenceProto.Envelope) {
          return mergeFrom((net.onlinesequencer.player.protos.SequenceProto.Envelope)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.onlinesequencer.player.protos.SequenceProto.Envelope other) {
        if (other == net.onlinesequencer.player.protos.SequenceProto.Envelope.getDefaultInstance()) return this;
        if (other.getEnabled() != false) {
          setEnabled(other.getEnabled());
        }
        if (other.getAttack() != 0F) {
          setAttack(other.getAttack());
        }
        if (other.getHold() != 0F) {
          setHold(other.getHold());
        }
        if (other.getDecay() != 0F) {
          setDecay(other.getDecay());
        }
        if (other.getSustain() != 0F) {
          setSustain(other.getSustain());
        }
        if (other.getRelease() != 0F) {
          setRelease(other.getRelease());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                enabled_ = input.readBool();

                break;
              } // case 8
              case 21: {
                attack_ = input.readFloat();

                break;
              } // case 21
              case 29: {
                hold_ = input.readFloat();

                break;
              } // case 29
              case 37: {
                decay_ = input.readFloat();

                break;
              } // case 37
              case 45: {
                sustain_ = input.readFloat();

                break;
              } // case 45
              case 53: {
                release_ = input.readFloat();

                break;
              } // case 53
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private boolean enabled_ ;
      /**
       * <code>bool enabled = 1;</code>
       * @return The enabled.
       */
      @java.lang.Override
      public boolean getEnabled() {
        return enabled_;
      }
      /**
       * <code>bool enabled = 1;</code>
       * @param value The enabled to set.
       * @return This builder for chaining.
       */
      public Builder setEnabled(boolean value) {
        
        enabled_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool enabled = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearEnabled() {
        
        enabled_ = false;
        onChanged();
        return this;
      }

      private float attack_ ;
      /**
       * <code>float attack = 2;</code>
       * @return The attack.
       */
      @java.lang.Override
      public float getAttack() {
        return attack_;
      }
      /**
       * <code>float attack = 2;</code>
       * @param value The attack to set.
       * @return This builder for chaining.
       */
      public Builder setAttack(float value) {
        
        attack_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float attack = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearAttack() {
        
        attack_ = 0F;
        onChanged();
        return this;
      }

      private float hold_ ;
      /**
       * <code>float hold = 3;</code>
       * @return The hold.
       */
      @java.lang.Override
      public float getHold() {
        return hold_;
      }
      /**
       * <code>float hold = 3;</code>
       * @param value The hold to set.
       * @return This builder for chaining.
       */
      public Builder setHold(float value) {
        
        hold_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float hold = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearHold() {
        
        hold_ = 0F;
        onChanged();
        return this;
      }

      private float decay_ ;
      /**
       * <code>float decay = 4;</code>
       * @return The decay.
       */
      @java.lang.Override
      public float getDecay() {
        return decay_;
      }
      /**
       * <code>float decay = 4;</code>
       * @param value The decay to set.
       * @return This builder for chaining.
       */
      public Builder setDecay(float value) {
        
        decay_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float decay = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearDecay() {
        
        decay_ = 0F;
        onChanged();
        return this;
      }

      private float sustain_ ;
      /**
       * <code>float sustain = 5;</code>
       * @return The sustain.
       */
      @java.lang.Override
      public float getSustain() {
        return sustain_;
      }
      /**
       * <code>float sustain = 5;</code>
       * @param value The sustain to set.
       * @return This builder for chaining.
       */
      public Builder setSustain(float value) {
        
        sustain_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float sustain = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearSustain() {
        
        sustain_ = 0F;
        onChanged();
        return this;
      }

      private float release_ ;
      /**
       * <code>float release = 6;</code>
       * @return The release.
       */
      @java.lang.Override
      public float getRelease() {
        return release_;
      }
      /**
       * <code>float release = 6;</code>
       * @param value The release to set.
       * @return This builder for chaining.
       */
      public Builder setRelease(float value) {
        
        release_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float release = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearRelease() {
        
        release_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Envelope)
    }

    // @@protoc_insertion_point(class_scope:Envelope)
    private static final net.onlinesequencer.player.protos.SequenceProto.Envelope DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.onlinesequencer.player.protos.SequenceProto.Envelope();
    }

    public static net.onlinesequencer.player.protos.SequenceProto.Envelope getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Envelope>
        PARSER = new com.google.protobuf.AbstractParser<Envelope>() {
      @java.lang.Override
      public Envelope parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Envelope> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Envelope> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.onlinesequencer.player.protos.SequenceProto.Envelope getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SynthOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Synth)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.SynthType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <code>.SynthType type = 1;</code>
     * @return The type.
     */
    net.onlinesequencer.player.protos.SequenceProto.SynthType getType();

    /**
     * <code>.Envelope volume_envelope = 2;</code>
     * @return Whether the volumeEnvelope field is set.
     */
    boolean hasVolumeEnvelope();
    /**
     * <code>.Envelope volume_envelope = 2;</code>
     * @return The volumeEnvelope.
     */
    net.onlinesequencer.player.protos.SequenceProto.Envelope getVolumeEnvelope();
    /**
     * <code>.Envelope volume_envelope = 2;</code>
     */
    net.onlinesequencer.player.protos.SequenceProto.EnvelopeOrBuilder getVolumeEnvelopeOrBuilder();

    /**
     * <code>.Envelope filter_envelope = 3;</code>
     * @return Whether the filterEnvelope field is set.
     */
    boolean hasFilterEnvelope();
    /**
     * <code>.Envelope filter_envelope = 3;</code>
     * @return The filterEnvelope.
     */
    net.onlinesequencer.player.protos.SequenceProto.Envelope getFilterEnvelope();
    /**
     * <code>.Envelope filter_envelope = 3;</code>
     */
    net.onlinesequencer.player.protos.SequenceProto.EnvelopeOrBuilder getFilterEnvelopeOrBuilder();

    /**
     * <code>float filter = 4;</code>
     * @return The filter.
     */
    float getFilter();

    /**
     * <code>float resonance = 5;</code>
     * @return The resonance.
     */
    float getResonance();

    /**
     * <code>int32 filter_type = 6;</code>
     * @return The filterType.
     */
    int getFilterType();

    /**
     * <code>bool lfo_enabled = 7;</code>
     * @return The lfoEnabled.
     */
    boolean getLfoEnabled();

    /**
     * <code>.LFOType lfo_type = 8;</code>
     * @return The enum numeric value on the wire for lfoType.
     */
    int getLfoTypeValue();
    /**
     * <code>.LFOType lfo_type = 8;</code>
     * @return The lfoType.
     */
    net.onlinesequencer.player.protos.SequenceProto.LFOType getLfoType();

    /**
     * <code>float lfo_freq = 9;</code>
     * @return The lfoFreq.
     */
    float getLfoFreq();

    /**
     * <code>float lfo_level = 10;</code>
     * @return The lfoLevel.
     */
    float getLfoLevel();

    /**
     * <code>.LFOTarget lfo_target = 11;</code>
     * @return The enum numeric value on the wire for lfoTarget.
     */
    int getLfoTargetValue();
    /**
     * <code>.LFOTarget lfo_target = 11;</code>
     * @return The lfoTarget.
     */
    net.onlinesequencer.player.protos.SequenceProto.LFOTarget getLfoTarget();

    /**
     * <code>.LFOMode lfo_mode = 12;</code>
     * @return The enum numeric value on the wire for lfoMode.
     */
    int getLfoModeValue();
    /**
     * <code>.LFOMode lfo_mode = 12;</code>
     * @return The lfoMode.
     */
    net.onlinesequencer.player.protos.SequenceProto.LFOMode getLfoMode();
  }
  /**
   * Protobuf type {@code Synth}
   */
  public static final class Synth extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Synth)
      SynthOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Synth.newBuilder() to construct.
    private Synth(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Synth() {
      type_ = 0;
      lfoType_ = 0;
      lfoTarget_ = 0;
      lfoMode_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Synth();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.onlinesequencer.player.protos.SequenceProto.internal_static_Synth_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.onlinesequencer.player.protos.SequenceProto.internal_static_Synth_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.onlinesequencer.player.protos.SequenceProto.Synth.class, net.onlinesequencer.player.protos.SequenceProto.Synth.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>.SynthType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.SynthType type = 1;</code>
     * @return The type.
     */
    @java.lang.Override public net.onlinesequencer.player.protos.SequenceProto.SynthType getType() {
      @SuppressWarnings("deprecation")
      net.onlinesequencer.player.protos.SequenceProto.SynthType result = net.onlinesequencer.player.protos.SequenceProto.SynthType.valueOf(type_);
      return result == null ? net.onlinesequencer.player.protos.SequenceProto.SynthType.UNRECOGNIZED : result;
    }

    public static final int VOLUME_ENVELOPE_FIELD_NUMBER = 2;
    private net.onlinesequencer.player.protos.SequenceProto.Envelope volumeEnvelope_;
    /**
     * <code>.Envelope volume_envelope = 2;</code>
     * @return Whether the volumeEnvelope field is set.
     */
    @java.lang.Override
    public boolean hasVolumeEnvelope() {
      return volumeEnvelope_ != null;
    }
    /**
     * <code>.Envelope volume_envelope = 2;</code>
     * @return The volumeEnvelope.
     */
    @java.lang.Override
    public net.onlinesequencer.player.protos.SequenceProto.Envelope getVolumeEnvelope() {
      return volumeEnvelope_ == null ? net.onlinesequencer.player.protos.SequenceProto.Envelope.getDefaultInstance() : volumeEnvelope_;
    }
    /**
     * <code>.Envelope volume_envelope = 2;</code>
     */
    @java.lang.Override
    public net.onlinesequencer.player.protos.SequenceProto.EnvelopeOrBuilder getVolumeEnvelopeOrBuilder() {
      return getVolumeEnvelope();
    }

    public static final int FILTER_ENVELOPE_FIELD_NUMBER = 3;
    private net.onlinesequencer.player.protos.SequenceProto.Envelope filterEnvelope_;
    /**
     * <code>.Envelope filter_envelope = 3;</code>
     * @return Whether the filterEnvelope field is set.
     */
    @java.lang.Override
    public boolean hasFilterEnvelope() {
      return filterEnvelope_ != null;
    }
    /**
     * <code>.Envelope filter_envelope = 3;</code>
     * @return The filterEnvelope.
     */
    @java.lang.Override
    public net.onlinesequencer.player.protos.SequenceProto.Envelope getFilterEnvelope() {
      return filterEnvelope_ == null ? net.onlinesequencer.player.protos.SequenceProto.Envelope.getDefaultInstance() : filterEnvelope_;
    }
    /**
     * <code>.Envelope filter_envelope = 3;</code>
     */
    @java.lang.Override
    public net.onlinesequencer.player.protos.SequenceProto.EnvelopeOrBuilder getFilterEnvelopeOrBuilder() {
      return getFilterEnvelope();
    }

    public static final int FILTER_FIELD_NUMBER = 4;
    private float filter_;
    /**
     * <code>float filter = 4;</code>
     * @return The filter.
     */
    @java.lang.Override
    public float getFilter() {
      return filter_;
    }

    public static final int RESONANCE_FIELD_NUMBER = 5;
    private float resonance_;
    /**
     * <code>float resonance = 5;</code>
     * @return The resonance.
     */
    @java.lang.Override
    public float getResonance() {
      return resonance_;
    }

    public static final int FILTER_TYPE_FIELD_NUMBER = 6;
    private int filterType_;
    /**
     * <code>int32 filter_type = 6;</code>
     * @return The filterType.
     */
    @java.lang.Override
    public int getFilterType() {
      return filterType_;
    }

    public static final int LFO_ENABLED_FIELD_NUMBER = 7;
    private boolean lfoEnabled_;
    /**
     * <code>bool lfo_enabled = 7;</code>
     * @return The lfoEnabled.
     */
    @java.lang.Override
    public boolean getLfoEnabled() {
      return lfoEnabled_;
    }

    public static final int LFO_TYPE_FIELD_NUMBER = 8;
    private int lfoType_;
    /**
     * <code>.LFOType lfo_type = 8;</code>
     * @return The enum numeric value on the wire for lfoType.
     */
    @java.lang.Override public int getLfoTypeValue() {
      return lfoType_;
    }
    /**
     * <code>.LFOType lfo_type = 8;</code>
     * @return The lfoType.
     */
    @java.lang.Override public net.onlinesequencer.player.protos.SequenceProto.LFOType getLfoType() {
      @SuppressWarnings("deprecation")
      net.onlinesequencer.player.protos.SequenceProto.LFOType result = net.onlinesequencer.player.protos.SequenceProto.LFOType.valueOf(lfoType_);
      return result == null ? net.onlinesequencer.player.protos.SequenceProto.LFOType.UNRECOGNIZED : result;
    }

    public static final int LFO_FREQ_FIELD_NUMBER = 9;
    private float lfoFreq_;
    /**
     * <code>float lfo_freq = 9;</code>
     * @return The lfoFreq.
     */
    @java.lang.Override
    public float getLfoFreq() {
      return lfoFreq_;
    }

    public static final int LFO_LEVEL_FIELD_NUMBER = 10;
    private float lfoLevel_;
    /**
     * <code>float lfo_level = 10;</code>
     * @return The lfoLevel.
     */
    @java.lang.Override
    public float getLfoLevel() {
      return lfoLevel_;
    }

    public static final int LFO_TARGET_FIELD_NUMBER = 11;
    private int lfoTarget_;
    /**
     * <code>.LFOTarget lfo_target = 11;</code>
     * @return The enum numeric value on the wire for lfoTarget.
     */
    @java.lang.Override public int getLfoTargetValue() {
      return lfoTarget_;
    }
    /**
     * <code>.LFOTarget lfo_target = 11;</code>
     * @return The lfoTarget.
     */
    @java.lang.Override public net.onlinesequencer.player.protos.SequenceProto.LFOTarget getLfoTarget() {
      @SuppressWarnings("deprecation")
      net.onlinesequencer.player.protos.SequenceProto.LFOTarget result = net.onlinesequencer.player.protos.SequenceProto.LFOTarget.valueOf(lfoTarget_);
      return result == null ? net.onlinesequencer.player.protos.SequenceProto.LFOTarget.UNRECOGNIZED : result;
    }

    public static final int LFO_MODE_FIELD_NUMBER = 12;
    private int lfoMode_;
    /**
     * <code>.LFOMode lfo_mode = 12;</code>
     * @return The enum numeric value on the wire for lfoMode.
     */
    @java.lang.Override public int getLfoModeValue() {
      return lfoMode_;
    }
    /**
     * <code>.LFOMode lfo_mode = 12;</code>
     * @return The lfoMode.
     */
    @java.lang.Override public net.onlinesequencer.player.protos.SequenceProto.LFOMode getLfoMode() {
      @SuppressWarnings("deprecation")
      net.onlinesequencer.player.protos.SequenceProto.LFOMode result = net.onlinesequencer.player.protos.SequenceProto.LFOMode.valueOf(lfoMode_);
      return result == null ? net.onlinesequencer.player.protos.SequenceProto.LFOMode.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != net.onlinesequencer.player.protos.SequenceProto.SynthType.Sine.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (volumeEnvelope_ != null) {
        output.writeMessage(2, getVolumeEnvelope());
      }
      if (filterEnvelope_ != null) {
        output.writeMessage(3, getFilterEnvelope());
      }
      if (java.lang.Float.floatToRawIntBits(filter_) != 0) {
        output.writeFloat(4, filter_);
      }
      if (java.lang.Float.floatToRawIntBits(resonance_) != 0) {
        output.writeFloat(5, resonance_);
      }
      if (filterType_ != 0) {
        output.writeInt32(6, filterType_);
      }
      if (lfoEnabled_ != false) {
        output.writeBool(7, lfoEnabled_);
      }
      if (lfoType_ != net.onlinesequencer.player.protos.SequenceProto.LFOType.SineLFO.getNumber()) {
        output.writeEnum(8, lfoType_);
      }
      if (java.lang.Float.floatToRawIntBits(lfoFreq_) != 0) {
        output.writeFloat(9, lfoFreq_);
      }
      if (java.lang.Float.floatToRawIntBits(lfoLevel_) != 0) {
        output.writeFloat(10, lfoLevel_);
      }
      if (lfoTarget_ != net.onlinesequencer.player.protos.SequenceProto.LFOTarget.Volume.getNumber()) {
        output.writeEnum(11, lfoTarget_);
      }
      if (lfoMode_ != net.onlinesequencer.player.protos.SequenceProto.LFOMode.Numerator.getNumber()) {
        output.writeEnum(12, lfoMode_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != net.onlinesequencer.player.protos.SequenceProto.SynthType.Sine.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (volumeEnvelope_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getVolumeEnvelope());
      }
      if (filterEnvelope_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getFilterEnvelope());
      }
      if (java.lang.Float.floatToRawIntBits(filter_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, filter_);
      }
      if (java.lang.Float.floatToRawIntBits(resonance_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, resonance_);
      }
      if (filterType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, filterType_);
      }
      if (lfoEnabled_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, lfoEnabled_);
      }
      if (lfoType_ != net.onlinesequencer.player.protos.SequenceProto.LFOType.SineLFO.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(8, lfoType_);
      }
      if (java.lang.Float.floatToRawIntBits(lfoFreq_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, lfoFreq_);
      }
      if (java.lang.Float.floatToRawIntBits(lfoLevel_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(10, lfoLevel_);
      }
      if (lfoTarget_ != net.onlinesequencer.player.protos.SequenceProto.LFOTarget.Volume.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(11, lfoTarget_);
      }
      if (lfoMode_ != net.onlinesequencer.player.protos.SequenceProto.LFOMode.Numerator.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(12, lfoMode_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.onlinesequencer.player.protos.SequenceProto.Synth)) {
        return super.equals(obj);
      }
      net.onlinesequencer.player.protos.SequenceProto.Synth other = (net.onlinesequencer.player.protos.SequenceProto.Synth) obj;

      if (type_ != other.type_) return false;
      if (hasVolumeEnvelope() != other.hasVolumeEnvelope()) return false;
      if (hasVolumeEnvelope()) {
        if (!getVolumeEnvelope()
            .equals(other.getVolumeEnvelope())) return false;
      }
      if (hasFilterEnvelope() != other.hasFilterEnvelope()) return false;
      if (hasFilterEnvelope()) {
        if (!getFilterEnvelope()
            .equals(other.getFilterEnvelope())) return false;
      }
      if (java.lang.Float.floatToIntBits(getFilter())
          != java.lang.Float.floatToIntBits(
              other.getFilter())) return false;
      if (java.lang.Float.floatToIntBits(getResonance())
          != java.lang.Float.floatToIntBits(
              other.getResonance())) return false;
      if (getFilterType()
          != other.getFilterType()) return false;
      if (getLfoEnabled()
          != other.getLfoEnabled()) return false;
      if (lfoType_ != other.lfoType_) return false;
      if (java.lang.Float.floatToIntBits(getLfoFreq())
          != java.lang.Float.floatToIntBits(
              other.getLfoFreq())) return false;
      if (java.lang.Float.floatToIntBits(getLfoLevel())
          != java.lang.Float.floatToIntBits(
              other.getLfoLevel())) return false;
      if (lfoTarget_ != other.lfoTarget_) return false;
      if (lfoMode_ != other.lfoMode_) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      if (hasVolumeEnvelope()) {
        hash = (37 * hash) + VOLUME_ENVELOPE_FIELD_NUMBER;
        hash = (53 * hash) + getVolumeEnvelope().hashCode();
      }
      if (hasFilterEnvelope()) {
        hash = (37 * hash) + FILTER_ENVELOPE_FIELD_NUMBER;
        hash = (53 * hash) + getFilterEnvelope().hashCode();
      }
      hash = (37 * hash) + FILTER_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getFilter());
      hash = (37 * hash) + RESONANCE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getResonance());
      hash = (37 * hash) + FILTER_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getFilterType();
      hash = (37 * hash) + LFO_ENABLED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getLfoEnabled());
      hash = (37 * hash) + LFO_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + lfoType_;
      hash = (37 * hash) + LFO_FREQ_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getLfoFreq());
      hash = (37 * hash) + LFO_LEVEL_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getLfoLevel());
      hash = (37 * hash) + LFO_TARGET_FIELD_NUMBER;
      hash = (53 * hash) + lfoTarget_;
      hash = (37 * hash) + LFO_MODE_FIELD_NUMBER;
      hash = (53 * hash) + lfoMode_;
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.onlinesequencer.player.protos.SequenceProto.Synth parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.Synth parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.Synth parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.Synth parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.Synth parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.Synth parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.Synth parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.Synth parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.Synth parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.Synth parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.Synth parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.Synth parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.onlinesequencer.player.protos.SequenceProto.Synth prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Synth}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Synth)
        net.onlinesequencer.player.protos.SequenceProto.SynthOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.onlinesequencer.player.protos.SequenceProto.internal_static_Synth_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.onlinesequencer.player.protos.SequenceProto.internal_static_Synth_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.onlinesequencer.player.protos.SequenceProto.Synth.class, net.onlinesequencer.player.protos.SequenceProto.Synth.Builder.class);
      }

      // Construct using net.onlinesequencer.player.protos.SequenceProto.Synth.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = 0;

        if (volumeEnvelopeBuilder_ == null) {
          volumeEnvelope_ = null;
        } else {
          volumeEnvelope_ = null;
          volumeEnvelopeBuilder_ = null;
        }
        if (filterEnvelopeBuilder_ == null) {
          filterEnvelope_ = null;
        } else {
          filterEnvelope_ = null;
          filterEnvelopeBuilder_ = null;
        }
        filter_ = 0F;

        resonance_ = 0F;

        filterType_ = 0;

        lfoEnabled_ = false;

        lfoType_ = 0;

        lfoFreq_ = 0F;

        lfoLevel_ = 0F;

        lfoTarget_ = 0;

        lfoMode_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.onlinesequencer.player.protos.SequenceProto.internal_static_Synth_descriptor;
      }

      @java.lang.Override
      public net.onlinesequencer.player.protos.SequenceProto.Synth getDefaultInstanceForType() {
        return net.onlinesequencer.player.protos.SequenceProto.Synth.getDefaultInstance();
      }

      @java.lang.Override
      public net.onlinesequencer.player.protos.SequenceProto.Synth build() {
        net.onlinesequencer.player.protos.SequenceProto.Synth result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.onlinesequencer.player.protos.SequenceProto.Synth buildPartial() {
        net.onlinesequencer.player.protos.SequenceProto.Synth result = new net.onlinesequencer.player.protos.SequenceProto.Synth(this);
        result.type_ = type_;
        if (volumeEnvelopeBuilder_ == null) {
          result.volumeEnvelope_ = volumeEnvelope_;
        } else {
          result.volumeEnvelope_ = volumeEnvelopeBuilder_.build();
        }
        if (filterEnvelopeBuilder_ == null) {
          result.filterEnvelope_ = filterEnvelope_;
        } else {
          result.filterEnvelope_ = filterEnvelopeBuilder_.build();
        }
        result.filter_ = filter_;
        result.resonance_ = resonance_;
        result.filterType_ = filterType_;
        result.lfoEnabled_ = lfoEnabled_;
        result.lfoType_ = lfoType_;
        result.lfoFreq_ = lfoFreq_;
        result.lfoLevel_ = lfoLevel_;
        result.lfoTarget_ = lfoTarget_;
        result.lfoMode_ = lfoMode_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.onlinesequencer.player.protos.SequenceProto.Synth) {
          return mergeFrom((net.onlinesequencer.player.protos.SequenceProto.Synth)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.onlinesequencer.player.protos.SequenceProto.Synth other) {
        if (other == net.onlinesequencer.player.protos.SequenceProto.Synth.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.hasVolumeEnvelope()) {
          mergeVolumeEnvelope(other.getVolumeEnvelope());
        }
        if (other.hasFilterEnvelope()) {
          mergeFilterEnvelope(other.getFilterEnvelope());
        }
        if (other.getFilter() != 0F) {
          setFilter(other.getFilter());
        }
        if (other.getResonance() != 0F) {
          setResonance(other.getResonance());
        }
        if (other.getFilterType() != 0) {
          setFilterType(other.getFilterType());
        }
        if (other.getLfoEnabled() != false) {
          setLfoEnabled(other.getLfoEnabled());
        }
        if (other.lfoType_ != 0) {
          setLfoTypeValue(other.getLfoTypeValue());
        }
        if (other.getLfoFreq() != 0F) {
          setLfoFreq(other.getLfoFreq());
        }
        if (other.getLfoLevel() != 0F) {
          setLfoLevel(other.getLfoLevel());
        }
        if (other.lfoTarget_ != 0) {
          setLfoTargetValue(other.getLfoTargetValue());
        }
        if (other.lfoMode_ != 0) {
          setLfoModeValue(other.getLfoModeValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                type_ = input.readEnum();

                break;
              } // case 8
              case 18: {
                input.readMessage(
                    getVolumeEnvelopeFieldBuilder().getBuilder(),
                    extensionRegistry);

                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getFilterEnvelopeFieldBuilder().getBuilder(),
                    extensionRegistry);

                break;
              } // case 26
              case 37: {
                filter_ = input.readFloat();

                break;
              } // case 37
              case 45: {
                resonance_ = input.readFloat();

                break;
              } // case 45
              case 48: {
                filterType_ = input.readInt32();

                break;
              } // case 48
              case 56: {
                lfoEnabled_ = input.readBool();

                break;
              } // case 56
              case 64: {
                lfoType_ = input.readEnum();

                break;
              } // case 64
              case 77: {
                lfoFreq_ = input.readFloat();

                break;
              } // case 77
              case 85: {
                lfoLevel_ = input.readFloat();

                break;
              } // case 85
              case 88: {
                lfoTarget_ = input.readEnum();

                break;
              } // case 88
              case 96: {
                lfoMode_ = input.readEnum();

                break;
              } // case 96
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int type_ = 0;
      /**
       * <code>.SynthType type = 1;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.SynthType type = 1;</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.SynthType type = 1;</code>
       * @return The type.
       */
      @java.lang.Override
      public net.onlinesequencer.player.protos.SequenceProto.SynthType getType() {
        @SuppressWarnings("deprecation")
        net.onlinesequencer.player.protos.SequenceProto.SynthType result = net.onlinesequencer.player.protos.SequenceProto.SynthType.valueOf(type_);
        return result == null ? net.onlinesequencer.player.protos.SequenceProto.SynthType.UNRECOGNIZED : result;
      }
      /**
       * <code>.SynthType type = 1;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(net.onlinesequencer.player.protos.SequenceProto.SynthType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.SynthType type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private net.onlinesequencer.player.protos.SequenceProto.Envelope volumeEnvelope_;
      private com.google.protobuf.SingleFieldBuilderV3<
          net.onlinesequencer.player.protos.SequenceProto.Envelope, net.onlinesequencer.player.protos.SequenceProto.Envelope.Builder, net.onlinesequencer.player.protos.SequenceProto.EnvelopeOrBuilder> volumeEnvelopeBuilder_;
      /**
       * <code>.Envelope volume_envelope = 2;</code>
       * @return Whether the volumeEnvelope field is set.
       */
      public boolean hasVolumeEnvelope() {
        return volumeEnvelopeBuilder_ != null || volumeEnvelope_ != null;
      }
      /**
       * <code>.Envelope volume_envelope = 2;</code>
       * @return The volumeEnvelope.
       */
      public net.onlinesequencer.player.protos.SequenceProto.Envelope getVolumeEnvelope() {
        if (volumeEnvelopeBuilder_ == null) {
          return volumeEnvelope_ == null ? net.onlinesequencer.player.protos.SequenceProto.Envelope.getDefaultInstance() : volumeEnvelope_;
        } else {
          return volumeEnvelopeBuilder_.getMessage();
        }
      }
      /**
       * <code>.Envelope volume_envelope = 2;</code>
       */
      public Builder setVolumeEnvelope(net.onlinesequencer.player.protos.SequenceProto.Envelope value) {
        if (volumeEnvelopeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          volumeEnvelope_ = value;
          onChanged();
        } else {
          volumeEnvelopeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.Envelope volume_envelope = 2;</code>
       */
      public Builder setVolumeEnvelope(
          net.onlinesequencer.player.protos.SequenceProto.Envelope.Builder builderForValue) {
        if (volumeEnvelopeBuilder_ == null) {
          volumeEnvelope_ = builderForValue.build();
          onChanged();
        } else {
          volumeEnvelopeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.Envelope volume_envelope = 2;</code>
       */
      public Builder mergeVolumeEnvelope(net.onlinesequencer.player.protos.SequenceProto.Envelope value) {
        if (volumeEnvelopeBuilder_ == null) {
          if (volumeEnvelope_ != null) {
            volumeEnvelope_ =
              net.onlinesequencer.player.protos.SequenceProto.Envelope.newBuilder(volumeEnvelope_).mergeFrom(value).buildPartial();
          } else {
            volumeEnvelope_ = value;
          }
          onChanged();
        } else {
          volumeEnvelopeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.Envelope volume_envelope = 2;</code>
       */
      public Builder clearVolumeEnvelope() {
        if (volumeEnvelopeBuilder_ == null) {
          volumeEnvelope_ = null;
          onChanged();
        } else {
          volumeEnvelope_ = null;
          volumeEnvelopeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.Envelope volume_envelope = 2;</code>
       */
      public net.onlinesequencer.player.protos.SequenceProto.Envelope.Builder getVolumeEnvelopeBuilder() {
        
        onChanged();
        return getVolumeEnvelopeFieldBuilder().getBuilder();
      }
      /**
       * <code>.Envelope volume_envelope = 2;</code>
       */
      public net.onlinesequencer.player.protos.SequenceProto.EnvelopeOrBuilder getVolumeEnvelopeOrBuilder() {
        if (volumeEnvelopeBuilder_ != null) {
          return volumeEnvelopeBuilder_.getMessageOrBuilder();
        } else {
          return volumeEnvelope_ == null ?
              net.onlinesequencer.player.protos.SequenceProto.Envelope.getDefaultInstance() : volumeEnvelope_;
        }
      }
      /**
       * <code>.Envelope volume_envelope = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          net.onlinesequencer.player.protos.SequenceProto.Envelope, net.onlinesequencer.player.protos.SequenceProto.Envelope.Builder, net.onlinesequencer.player.protos.SequenceProto.EnvelopeOrBuilder> 
          getVolumeEnvelopeFieldBuilder() {
        if (volumeEnvelopeBuilder_ == null) {
          volumeEnvelopeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              net.onlinesequencer.player.protos.SequenceProto.Envelope, net.onlinesequencer.player.protos.SequenceProto.Envelope.Builder, net.onlinesequencer.player.protos.SequenceProto.EnvelopeOrBuilder>(
                  getVolumeEnvelope(),
                  getParentForChildren(),
                  isClean());
          volumeEnvelope_ = null;
        }
        return volumeEnvelopeBuilder_;
      }

      private net.onlinesequencer.player.protos.SequenceProto.Envelope filterEnvelope_;
      private com.google.protobuf.SingleFieldBuilderV3<
          net.onlinesequencer.player.protos.SequenceProto.Envelope, net.onlinesequencer.player.protos.SequenceProto.Envelope.Builder, net.onlinesequencer.player.protos.SequenceProto.EnvelopeOrBuilder> filterEnvelopeBuilder_;
      /**
       * <code>.Envelope filter_envelope = 3;</code>
       * @return Whether the filterEnvelope field is set.
       */
      public boolean hasFilterEnvelope() {
        return filterEnvelopeBuilder_ != null || filterEnvelope_ != null;
      }
      /**
       * <code>.Envelope filter_envelope = 3;</code>
       * @return The filterEnvelope.
       */
      public net.onlinesequencer.player.protos.SequenceProto.Envelope getFilterEnvelope() {
        if (filterEnvelopeBuilder_ == null) {
          return filterEnvelope_ == null ? net.onlinesequencer.player.protos.SequenceProto.Envelope.getDefaultInstance() : filterEnvelope_;
        } else {
          return filterEnvelopeBuilder_.getMessage();
        }
      }
      /**
       * <code>.Envelope filter_envelope = 3;</code>
       */
      public Builder setFilterEnvelope(net.onlinesequencer.player.protos.SequenceProto.Envelope value) {
        if (filterEnvelopeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          filterEnvelope_ = value;
          onChanged();
        } else {
          filterEnvelopeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.Envelope filter_envelope = 3;</code>
       */
      public Builder setFilterEnvelope(
          net.onlinesequencer.player.protos.SequenceProto.Envelope.Builder builderForValue) {
        if (filterEnvelopeBuilder_ == null) {
          filterEnvelope_ = builderForValue.build();
          onChanged();
        } else {
          filterEnvelopeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.Envelope filter_envelope = 3;</code>
       */
      public Builder mergeFilterEnvelope(net.onlinesequencer.player.protos.SequenceProto.Envelope value) {
        if (filterEnvelopeBuilder_ == null) {
          if (filterEnvelope_ != null) {
            filterEnvelope_ =
              net.onlinesequencer.player.protos.SequenceProto.Envelope.newBuilder(filterEnvelope_).mergeFrom(value).buildPartial();
          } else {
            filterEnvelope_ = value;
          }
          onChanged();
        } else {
          filterEnvelopeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.Envelope filter_envelope = 3;</code>
       */
      public Builder clearFilterEnvelope() {
        if (filterEnvelopeBuilder_ == null) {
          filterEnvelope_ = null;
          onChanged();
        } else {
          filterEnvelope_ = null;
          filterEnvelopeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.Envelope filter_envelope = 3;</code>
       */
      public net.onlinesequencer.player.protos.SequenceProto.Envelope.Builder getFilterEnvelopeBuilder() {
        
        onChanged();
        return getFilterEnvelopeFieldBuilder().getBuilder();
      }
      /**
       * <code>.Envelope filter_envelope = 3;</code>
       */
      public net.onlinesequencer.player.protos.SequenceProto.EnvelopeOrBuilder getFilterEnvelopeOrBuilder() {
        if (filterEnvelopeBuilder_ != null) {
          return filterEnvelopeBuilder_.getMessageOrBuilder();
        } else {
          return filterEnvelope_ == null ?
              net.onlinesequencer.player.protos.SequenceProto.Envelope.getDefaultInstance() : filterEnvelope_;
        }
      }
      /**
       * <code>.Envelope filter_envelope = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          net.onlinesequencer.player.protos.SequenceProto.Envelope, net.onlinesequencer.player.protos.SequenceProto.Envelope.Builder, net.onlinesequencer.player.protos.SequenceProto.EnvelopeOrBuilder> 
          getFilterEnvelopeFieldBuilder() {
        if (filterEnvelopeBuilder_ == null) {
          filterEnvelopeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              net.onlinesequencer.player.protos.SequenceProto.Envelope, net.onlinesequencer.player.protos.SequenceProto.Envelope.Builder, net.onlinesequencer.player.protos.SequenceProto.EnvelopeOrBuilder>(
                  getFilterEnvelope(),
                  getParentForChildren(),
                  isClean());
          filterEnvelope_ = null;
        }
        return filterEnvelopeBuilder_;
      }

      private float filter_ ;
      /**
       * <code>float filter = 4;</code>
       * @return The filter.
       */
      @java.lang.Override
      public float getFilter() {
        return filter_;
      }
      /**
       * <code>float filter = 4;</code>
       * @param value The filter to set.
       * @return This builder for chaining.
       */
      public Builder setFilter(float value) {
        
        filter_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float filter = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearFilter() {
        
        filter_ = 0F;
        onChanged();
        return this;
      }

      private float resonance_ ;
      /**
       * <code>float resonance = 5;</code>
       * @return The resonance.
       */
      @java.lang.Override
      public float getResonance() {
        return resonance_;
      }
      /**
       * <code>float resonance = 5;</code>
       * @param value The resonance to set.
       * @return This builder for chaining.
       */
      public Builder setResonance(float value) {
        
        resonance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float resonance = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearResonance() {
        
        resonance_ = 0F;
        onChanged();
        return this;
      }

      private int filterType_ ;
      /**
       * <code>int32 filter_type = 6;</code>
       * @return The filterType.
       */
      @java.lang.Override
      public int getFilterType() {
        return filterType_;
      }
      /**
       * <code>int32 filter_type = 6;</code>
       * @param value The filterType to set.
       * @return This builder for chaining.
       */
      public Builder setFilterType(int value) {
        
        filterType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 filter_type = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearFilterType() {
        
        filterType_ = 0;
        onChanged();
        return this;
      }

      private boolean lfoEnabled_ ;
      /**
       * <code>bool lfo_enabled = 7;</code>
       * @return The lfoEnabled.
       */
      @java.lang.Override
      public boolean getLfoEnabled() {
        return lfoEnabled_;
      }
      /**
       * <code>bool lfo_enabled = 7;</code>
       * @param value The lfoEnabled to set.
       * @return This builder for chaining.
       */
      public Builder setLfoEnabled(boolean value) {
        
        lfoEnabled_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool lfo_enabled = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearLfoEnabled() {
        
        lfoEnabled_ = false;
        onChanged();
        return this;
      }

      private int lfoType_ = 0;
      /**
       * <code>.LFOType lfo_type = 8;</code>
       * @return The enum numeric value on the wire for lfoType.
       */
      @java.lang.Override public int getLfoTypeValue() {
        return lfoType_;
      }
      /**
       * <code>.LFOType lfo_type = 8;</code>
       * @param value The enum numeric value on the wire for lfoType to set.
       * @return This builder for chaining.
       */
      public Builder setLfoTypeValue(int value) {
        
        lfoType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.LFOType lfo_type = 8;</code>
       * @return The lfoType.
       */
      @java.lang.Override
      public net.onlinesequencer.player.protos.SequenceProto.LFOType getLfoType() {
        @SuppressWarnings("deprecation")
        net.onlinesequencer.player.protos.SequenceProto.LFOType result = net.onlinesequencer.player.protos.SequenceProto.LFOType.valueOf(lfoType_);
        return result == null ? net.onlinesequencer.player.protos.SequenceProto.LFOType.UNRECOGNIZED : result;
      }
      /**
       * <code>.LFOType lfo_type = 8;</code>
       * @param value The lfoType to set.
       * @return This builder for chaining.
       */
      public Builder setLfoType(net.onlinesequencer.player.protos.SequenceProto.LFOType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        lfoType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.LFOType lfo_type = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearLfoType() {
        
        lfoType_ = 0;
        onChanged();
        return this;
      }

      private float lfoFreq_ ;
      /**
       * <code>float lfo_freq = 9;</code>
       * @return The lfoFreq.
       */
      @java.lang.Override
      public float getLfoFreq() {
        return lfoFreq_;
      }
      /**
       * <code>float lfo_freq = 9;</code>
       * @param value The lfoFreq to set.
       * @return This builder for chaining.
       */
      public Builder setLfoFreq(float value) {
        
        lfoFreq_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float lfo_freq = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearLfoFreq() {
        
        lfoFreq_ = 0F;
        onChanged();
        return this;
      }

      private float lfoLevel_ ;
      /**
       * <code>float lfo_level = 10;</code>
       * @return The lfoLevel.
       */
      @java.lang.Override
      public float getLfoLevel() {
        return lfoLevel_;
      }
      /**
       * <code>float lfo_level = 10;</code>
       * @param value The lfoLevel to set.
       * @return This builder for chaining.
       */
      public Builder setLfoLevel(float value) {
        
        lfoLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float lfo_level = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearLfoLevel() {
        
        lfoLevel_ = 0F;
        onChanged();
        return this;
      }

      private int lfoTarget_ = 0;
      /**
       * <code>.LFOTarget lfo_target = 11;</code>
       * @return The enum numeric value on the wire for lfoTarget.
       */
      @java.lang.Override public int getLfoTargetValue() {
        return lfoTarget_;
      }
      /**
       * <code>.LFOTarget lfo_target = 11;</code>
       * @param value The enum numeric value on the wire for lfoTarget to set.
       * @return This builder for chaining.
       */
      public Builder setLfoTargetValue(int value) {
        
        lfoTarget_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.LFOTarget lfo_target = 11;</code>
       * @return The lfoTarget.
       */
      @java.lang.Override
      public net.onlinesequencer.player.protos.SequenceProto.LFOTarget getLfoTarget() {
        @SuppressWarnings("deprecation")
        net.onlinesequencer.player.protos.SequenceProto.LFOTarget result = net.onlinesequencer.player.protos.SequenceProto.LFOTarget.valueOf(lfoTarget_);
        return result == null ? net.onlinesequencer.player.protos.SequenceProto.LFOTarget.UNRECOGNIZED : result;
      }
      /**
       * <code>.LFOTarget lfo_target = 11;</code>
       * @param value The lfoTarget to set.
       * @return This builder for chaining.
       */
      public Builder setLfoTarget(net.onlinesequencer.player.protos.SequenceProto.LFOTarget value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        lfoTarget_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.LFOTarget lfo_target = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearLfoTarget() {
        
        lfoTarget_ = 0;
        onChanged();
        return this;
      }

      private int lfoMode_ = 0;
      /**
       * <code>.LFOMode lfo_mode = 12;</code>
       * @return The enum numeric value on the wire for lfoMode.
       */
      @java.lang.Override public int getLfoModeValue() {
        return lfoMode_;
      }
      /**
       * <code>.LFOMode lfo_mode = 12;</code>
       * @param value The enum numeric value on the wire for lfoMode to set.
       * @return This builder for chaining.
       */
      public Builder setLfoModeValue(int value) {
        
        lfoMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.LFOMode lfo_mode = 12;</code>
       * @return The lfoMode.
       */
      @java.lang.Override
      public net.onlinesequencer.player.protos.SequenceProto.LFOMode getLfoMode() {
        @SuppressWarnings("deprecation")
        net.onlinesequencer.player.protos.SequenceProto.LFOMode result = net.onlinesequencer.player.protos.SequenceProto.LFOMode.valueOf(lfoMode_);
        return result == null ? net.onlinesequencer.player.protos.SequenceProto.LFOMode.UNRECOGNIZED : result;
      }
      /**
       * <code>.LFOMode lfo_mode = 12;</code>
       * @param value The lfoMode to set.
       * @return This builder for chaining.
       */
      public Builder setLfoMode(net.onlinesequencer.player.protos.SequenceProto.LFOMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        lfoMode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.LFOMode lfo_mode = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearLfoMode() {
        
        lfoMode_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Synth)
    }

    // @@protoc_insertion_point(class_scope:Synth)
    private static final net.onlinesequencer.player.protos.SequenceProto.Synth DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.onlinesequencer.player.protos.SequenceProto.Synth();
    }

    public static net.onlinesequencer.player.protos.SequenceProto.Synth getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Synth>
        PARSER = new com.google.protobuf.AbstractParser<Synth>() {
      @java.lang.Override
      public Synth parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Synth> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Synth> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.onlinesequencer.player.protos.SequenceProto.Synth getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SequenceSettingsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SequenceSettings)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 bpm = 1;</code>
     * @return The bpm.
     */
    int getBpm();

    /**
     * <code>int32 time_signature = 2;</code>
     * @return The timeSignature.
     */
    int getTimeSignature();

    /**
     * <code>map&lt;int32, .InstrumentSettings&gt; instruments = 3;</code>
     */
    int getInstrumentsCount();
    /**
     * <code>map&lt;int32, .InstrumentSettings&gt; instruments = 3;</code>
     */
    boolean containsInstruments(
        int key);
    /**
     * Use {@link #getInstrumentsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings>
    getInstruments();
    /**
     * <code>map&lt;int32, .InstrumentSettings&gt; instruments = 3;</code>
     */
    java.util.Map<java.lang.Integer, net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings>
    getInstrumentsMap();
    /**
     * <code>map&lt;int32, .InstrumentSettings&gt; instruments = 3;</code>
     */

    net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings getInstrumentsOrDefault(
        int key,
        net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings defaultValue);
    /**
     * <code>map&lt;int32, .InstrumentSettings&gt; instruments = 3;</code>
     */

    net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings getInstrumentsOrThrow(
        int key);

    /**
     * <pre>
     * Storing volume as (1 - volume) so it defaults to volume=1.
     * </pre>
     *
     * <code>float one_minus_volume = 4;</code>
     * @return The oneMinusVolume.
     */
    float getOneMinusVolume();
  }
  /**
   * Protobuf type {@code SequenceSettings}
   */
  public static final class SequenceSettings extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SequenceSettings)
      SequenceSettingsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SequenceSettings.newBuilder() to construct.
    private SequenceSettings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SequenceSettings() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SequenceSettings();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.onlinesequencer.player.protos.SequenceProto.internal_static_SequenceSettings_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 3:
          return internalGetInstruments();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.onlinesequencer.player.protos.SequenceProto.internal_static_SequenceSettings_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.onlinesequencer.player.protos.SequenceProto.SequenceSettings.class, net.onlinesequencer.player.protos.SequenceProto.SequenceSettings.Builder.class);
    }

    public static final int BPM_FIELD_NUMBER = 1;
    private int bpm_;
    /**
     * <code>int32 bpm = 1;</code>
     * @return The bpm.
     */
    @java.lang.Override
    public int getBpm() {
      return bpm_;
    }

    public static final int TIME_SIGNATURE_FIELD_NUMBER = 2;
    private int timeSignature_;
    /**
     * <code>int32 time_signature = 2;</code>
     * @return The timeSignature.
     */
    @java.lang.Override
    public int getTimeSignature() {
      return timeSignature_;
    }

    public static final int INSTRUMENTS_FIELD_NUMBER = 3;
    private static final class InstrumentsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings>newDefaultInstance(
                  net.onlinesequencer.player.protos.SequenceProto.internal_static_SequenceSettings_InstrumentsEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings> instruments_;
    private com.google.protobuf.MapField<java.lang.Integer, net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings>
    internalGetInstruments() {
      if (instruments_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            InstrumentsDefaultEntryHolder.defaultEntry);
      }
      return instruments_;
    }

    public int getInstrumentsCount() {
      return internalGetInstruments().getMap().size();
    }
    /**
     * <code>map&lt;int32, .InstrumentSettings&gt; instruments = 3;</code>
     */

    @java.lang.Override
    public boolean containsInstruments(
        int key) {
      
      return internalGetInstruments().getMap().containsKey(key);
    }
    /**
     * Use {@link #getInstrumentsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings> getInstruments() {
      return getInstrumentsMap();
    }
    /**
     * <code>map&lt;int32, .InstrumentSettings&gt; instruments = 3;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings> getInstrumentsMap() {
      return internalGetInstruments().getMap();
    }
    /**
     * <code>map&lt;int32, .InstrumentSettings&gt; instruments = 3;</code>
     */
    @java.lang.Override

    public net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings getInstrumentsOrDefault(
        int key,
        net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings defaultValue) {
      
      java.util.Map<java.lang.Integer, net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings> map =
          internalGetInstruments().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, .InstrumentSettings&gt; instruments = 3;</code>
     */
    @java.lang.Override

    public net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings getInstrumentsOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings> map =
          internalGetInstruments().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int ONE_MINUS_VOLUME_FIELD_NUMBER = 4;
    private float oneMinusVolume_;
    /**
     * <pre>
     * Storing volume as (1 - volume) so it defaults to volume=1.
     * </pre>
     *
     * <code>float one_minus_volume = 4;</code>
     * @return The oneMinusVolume.
     */
    @java.lang.Override
    public float getOneMinusVolume() {
      return oneMinusVolume_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (bpm_ != 0) {
        output.writeInt32(1, bpm_);
      }
      if (timeSignature_ != 0) {
        output.writeInt32(2, timeSignature_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetInstruments(),
          InstrumentsDefaultEntryHolder.defaultEntry,
          3);
      if (java.lang.Float.floatToRawIntBits(oneMinusVolume_) != 0) {
        output.writeFloat(4, oneMinusVolume_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (bpm_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, bpm_);
      }
      if (timeSignature_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, timeSignature_);
      }
      for (java.util.Map.Entry<java.lang.Integer, net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings> entry
           : internalGetInstruments().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings>
        instruments__ = InstrumentsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, instruments__);
      }
      if (java.lang.Float.floatToRawIntBits(oneMinusVolume_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, oneMinusVolume_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.onlinesequencer.player.protos.SequenceProto.SequenceSettings)) {
        return super.equals(obj);
      }
      net.onlinesequencer.player.protos.SequenceProto.SequenceSettings other = (net.onlinesequencer.player.protos.SequenceProto.SequenceSettings) obj;

      if (getBpm()
          != other.getBpm()) return false;
      if (getTimeSignature()
          != other.getTimeSignature()) return false;
      if (!internalGetInstruments().equals(
          other.internalGetInstruments())) return false;
      if (java.lang.Float.floatToIntBits(getOneMinusVolume())
          != java.lang.Float.floatToIntBits(
              other.getOneMinusVolume())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + BPM_FIELD_NUMBER;
      hash = (53 * hash) + getBpm();
      hash = (37 * hash) + TIME_SIGNATURE_FIELD_NUMBER;
      hash = (53 * hash) + getTimeSignature();
      if (!internalGetInstruments().getMap().isEmpty()) {
        hash = (37 * hash) + INSTRUMENTS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetInstruments().hashCode();
      }
      hash = (37 * hash) + ONE_MINUS_VOLUME_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getOneMinusVolume());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.onlinesequencer.player.protos.SequenceProto.SequenceSettings parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.SequenceSettings parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.SequenceSettings parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.SequenceSettings parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.SequenceSettings parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.SequenceSettings parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.SequenceSettings parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.SequenceSettings parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.SequenceSettings parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.SequenceSettings parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.SequenceSettings parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.SequenceSettings parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.onlinesequencer.player.protos.SequenceProto.SequenceSettings prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SequenceSettings}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SequenceSettings)
        net.onlinesequencer.player.protos.SequenceProto.SequenceSettingsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.onlinesequencer.player.protos.SequenceProto.internal_static_SequenceSettings_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 3:
            return internalGetInstruments();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 3:
            return internalGetMutableInstruments();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.onlinesequencer.player.protos.SequenceProto.internal_static_SequenceSettings_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.onlinesequencer.player.protos.SequenceProto.SequenceSettings.class, net.onlinesequencer.player.protos.SequenceProto.SequenceSettings.Builder.class);
      }

      // Construct using net.onlinesequencer.player.protos.SequenceProto.SequenceSettings.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bpm_ = 0;

        timeSignature_ = 0;

        internalGetMutableInstruments().clear();
        oneMinusVolume_ = 0F;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.onlinesequencer.player.protos.SequenceProto.internal_static_SequenceSettings_descriptor;
      }

      @java.lang.Override
      public net.onlinesequencer.player.protos.SequenceProto.SequenceSettings getDefaultInstanceForType() {
        return net.onlinesequencer.player.protos.SequenceProto.SequenceSettings.getDefaultInstance();
      }

      @java.lang.Override
      public net.onlinesequencer.player.protos.SequenceProto.SequenceSettings build() {
        net.onlinesequencer.player.protos.SequenceProto.SequenceSettings result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.onlinesequencer.player.protos.SequenceProto.SequenceSettings buildPartial() {
        net.onlinesequencer.player.protos.SequenceProto.SequenceSettings result = new net.onlinesequencer.player.protos.SequenceProto.SequenceSettings(this);
        int from_bitField0_ = bitField0_;
        result.bpm_ = bpm_;
        result.timeSignature_ = timeSignature_;
        result.instruments_ = internalGetInstruments();
        result.instruments_.makeImmutable();
        result.oneMinusVolume_ = oneMinusVolume_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.onlinesequencer.player.protos.SequenceProto.SequenceSettings) {
          return mergeFrom((net.onlinesequencer.player.protos.SequenceProto.SequenceSettings)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.onlinesequencer.player.protos.SequenceProto.SequenceSettings other) {
        if (other == net.onlinesequencer.player.protos.SequenceProto.SequenceSettings.getDefaultInstance()) return this;
        if (other.getBpm() != 0) {
          setBpm(other.getBpm());
        }
        if (other.getTimeSignature() != 0) {
          setTimeSignature(other.getTimeSignature());
        }
        internalGetMutableInstruments().mergeFrom(
            other.internalGetInstruments());
        if (other.getOneMinusVolume() != 0F) {
          setOneMinusVolume(other.getOneMinusVolume());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                bpm_ = input.readInt32();

                break;
              } // case 8
              case 16: {
                timeSignature_ = input.readInt32();

                break;
              } // case 16
              case 26: {
                com.google.protobuf.MapEntry<java.lang.Integer, net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings>
                instruments__ = input.readMessage(
                    InstrumentsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableInstruments().getMutableMap().put(
                    instruments__.getKey(), instruments__.getValue());
                break;
              } // case 26
              case 37: {
                oneMinusVolume_ = input.readFloat();

                break;
              } // case 37
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int bpm_ ;
      /**
       * <code>int32 bpm = 1;</code>
       * @return The bpm.
       */
      @java.lang.Override
      public int getBpm() {
        return bpm_;
      }
      /**
       * <code>int32 bpm = 1;</code>
       * @param value The bpm to set.
       * @return This builder for chaining.
       */
      public Builder setBpm(int value) {
        
        bpm_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 bpm = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearBpm() {
        
        bpm_ = 0;
        onChanged();
        return this;
      }

      private int timeSignature_ ;
      /**
       * <code>int32 time_signature = 2;</code>
       * @return The timeSignature.
       */
      @java.lang.Override
      public int getTimeSignature() {
        return timeSignature_;
      }
      /**
       * <code>int32 time_signature = 2;</code>
       * @param value The timeSignature to set.
       * @return This builder for chaining.
       */
      public Builder setTimeSignature(int value) {
        
        timeSignature_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 time_signature = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimeSignature() {
        
        timeSignature_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings> instruments_;
      private com.google.protobuf.MapField<java.lang.Integer, net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings>
      internalGetInstruments() {
        if (instruments_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              InstrumentsDefaultEntryHolder.defaultEntry);
        }
        return instruments_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings>
      internalGetMutableInstruments() {
        onChanged();;
        if (instruments_ == null) {
          instruments_ = com.google.protobuf.MapField.newMapField(
              InstrumentsDefaultEntryHolder.defaultEntry);
        }
        if (!instruments_.isMutable()) {
          instruments_ = instruments_.copy();
        }
        return instruments_;
      }

      public int getInstrumentsCount() {
        return internalGetInstruments().getMap().size();
      }
      /**
       * <code>map&lt;int32, .InstrumentSettings&gt; instruments = 3;</code>
       */

      @java.lang.Override
      public boolean containsInstruments(
          int key) {
        
        return internalGetInstruments().getMap().containsKey(key);
      }
      /**
       * Use {@link #getInstrumentsMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings> getInstruments() {
        return getInstrumentsMap();
      }
      /**
       * <code>map&lt;int32, .InstrumentSettings&gt; instruments = 3;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings> getInstrumentsMap() {
        return internalGetInstruments().getMap();
      }
      /**
       * <code>map&lt;int32, .InstrumentSettings&gt; instruments = 3;</code>
       */
      @java.lang.Override

      public net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings getInstrumentsOrDefault(
          int key,
          net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings defaultValue) {
        
        java.util.Map<java.lang.Integer, net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings> map =
            internalGetInstruments().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, .InstrumentSettings&gt; instruments = 3;</code>
       */
      @java.lang.Override

      public net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings getInstrumentsOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings> map =
            internalGetInstruments().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearInstruments() {
        internalGetMutableInstruments().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, .InstrumentSettings&gt; instruments = 3;</code>
       */

      public Builder removeInstruments(
          int key) {
        
        internalGetMutableInstruments().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings>
      getMutableInstruments() {
        return internalGetMutableInstruments().getMutableMap();
      }
      /**
       * <code>map&lt;int32, .InstrumentSettings&gt; instruments = 3;</code>
       */
      public Builder putInstruments(
          int key,
          net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings value) {
        
        if (value == null) {
  throw new NullPointerException("map value");
}

        internalGetMutableInstruments().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, .InstrumentSettings&gt; instruments = 3;</code>
       */

      public Builder putAllInstruments(
          java.util.Map<java.lang.Integer, net.onlinesequencer.player.protos.SequenceProto.InstrumentSettings> values) {
        internalGetMutableInstruments().getMutableMap()
            .putAll(values);
        return this;
      }

      private float oneMinusVolume_ ;
      /**
       * <pre>
       * Storing volume as (1 - volume) so it defaults to volume=1.
       * </pre>
       *
       * <code>float one_minus_volume = 4;</code>
       * @return The oneMinusVolume.
       */
      @java.lang.Override
      public float getOneMinusVolume() {
        return oneMinusVolume_;
      }
      /**
       * <pre>
       * Storing volume as (1 - volume) so it defaults to volume=1.
       * </pre>
       *
       * <code>float one_minus_volume = 4;</code>
       * @param value The oneMinusVolume to set.
       * @return This builder for chaining.
       */
      public Builder setOneMinusVolume(float value) {
        
        oneMinusVolume_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Storing volume as (1 - volume) so it defaults to volume=1.
       * </pre>
       *
       * <code>float one_minus_volume = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearOneMinusVolume() {
        
        oneMinusVolume_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SequenceSettings)
    }

    // @@protoc_insertion_point(class_scope:SequenceSettings)
    private static final net.onlinesequencer.player.protos.SequenceProto.SequenceSettings DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.onlinesequencer.player.protos.SequenceProto.SequenceSettings();
    }

    public static net.onlinesequencer.player.protos.SequenceProto.SequenceSettings getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SequenceSettings>
        PARSER = new com.google.protobuf.AbstractParser<SequenceSettings>() {
      @java.lang.Override
      public SequenceSettings parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<SequenceSettings> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SequenceSettings> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.onlinesequencer.player.protos.SequenceProto.SequenceSettings getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SequenceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Sequence)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.SequenceSettings settings = 1;</code>
     * @return Whether the settings field is set.
     */
    boolean hasSettings();
    /**
     * <code>.SequenceSettings settings = 1;</code>
     * @return The settings.
     */
    net.onlinesequencer.player.protos.SequenceProto.SequenceSettings getSettings();
    /**
     * <code>.SequenceSettings settings = 1;</code>
     */
    net.onlinesequencer.player.protos.SequenceProto.SequenceSettingsOrBuilder getSettingsOrBuilder();

    /**
     * <code>repeated .Note notes = 2;</code>
     */
    java.util.List<net.onlinesequencer.player.protos.SequenceProto.Note> 
        getNotesList();
    /**
     * <code>repeated .Note notes = 2;</code>
     */
    net.onlinesequencer.player.protos.SequenceProto.Note getNotes(int index);
    /**
     * <code>repeated .Note notes = 2;</code>
     */
    int getNotesCount();
    /**
     * <code>repeated .Note notes = 2;</code>
     */
    java.util.List<? extends net.onlinesequencer.player.protos.SequenceProto.NoteOrBuilder> 
        getNotesOrBuilderList();
    /**
     * <code>repeated .Note notes = 2;</code>
     */
    net.onlinesequencer.player.protos.SequenceProto.NoteOrBuilder getNotesOrBuilder(
        int index);

    /**
     * <code>repeated .Marker markers = 3;</code>
     */
    java.util.List<net.onlinesequencer.player.protos.SequenceProto.Marker> 
        getMarkersList();
    /**
     * <code>repeated .Marker markers = 3;</code>
     */
    net.onlinesequencer.player.protos.SequenceProto.Marker getMarkers(int index);
    /**
     * <code>repeated .Marker markers = 3;</code>
     */
    int getMarkersCount();
    /**
     * <code>repeated .Marker markers = 3;</code>
     */
    java.util.List<? extends net.onlinesequencer.player.protos.SequenceProto.MarkerOrBuilder> 
        getMarkersOrBuilderList();
    /**
     * <code>repeated .Marker markers = 3;</code>
     */
    net.onlinesequencer.player.protos.SequenceProto.MarkerOrBuilder getMarkersOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code Sequence}
   */
  public static final class Sequence extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Sequence)
      SequenceOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Sequence.newBuilder() to construct.
    private Sequence(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Sequence() {
      notes_ = java.util.Collections.emptyList();
      markers_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Sequence();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.onlinesequencer.player.protos.SequenceProto.internal_static_Sequence_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.onlinesequencer.player.protos.SequenceProto.internal_static_Sequence_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.onlinesequencer.player.protos.SequenceProto.Sequence.class, net.onlinesequencer.player.protos.SequenceProto.Sequence.Builder.class);
    }

    public static final int SETTINGS_FIELD_NUMBER = 1;
    private net.onlinesequencer.player.protos.SequenceProto.SequenceSettings settings_;
    /**
     * <code>.SequenceSettings settings = 1;</code>
     * @return Whether the settings field is set.
     */
    @java.lang.Override
    public boolean hasSettings() {
      return settings_ != null;
    }
    /**
     * <code>.SequenceSettings settings = 1;</code>
     * @return The settings.
     */
    @java.lang.Override
    public net.onlinesequencer.player.protos.SequenceProto.SequenceSettings getSettings() {
      return settings_ == null ? net.onlinesequencer.player.protos.SequenceProto.SequenceSettings.getDefaultInstance() : settings_;
    }
    /**
     * <code>.SequenceSettings settings = 1;</code>
     */
    @java.lang.Override
    public net.onlinesequencer.player.protos.SequenceProto.SequenceSettingsOrBuilder getSettingsOrBuilder() {
      return getSettings();
    }

    public static final int NOTES_FIELD_NUMBER = 2;
    private java.util.List<net.onlinesequencer.player.protos.SequenceProto.Note> notes_;
    /**
     * <code>repeated .Note notes = 2;</code>
     */
    @java.lang.Override
    public java.util.List<net.onlinesequencer.player.protos.SequenceProto.Note> getNotesList() {
      return notes_;
    }
    /**
     * <code>repeated .Note notes = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends net.onlinesequencer.player.protos.SequenceProto.NoteOrBuilder> 
        getNotesOrBuilderList() {
      return notes_;
    }
    /**
     * <code>repeated .Note notes = 2;</code>
     */
    @java.lang.Override
    public int getNotesCount() {
      return notes_.size();
    }
    /**
     * <code>repeated .Note notes = 2;</code>
     */
    @java.lang.Override
    public net.onlinesequencer.player.protos.SequenceProto.Note getNotes(int index) {
      return notes_.get(index);
    }
    /**
     * <code>repeated .Note notes = 2;</code>
     */
    @java.lang.Override
    public net.onlinesequencer.player.protos.SequenceProto.NoteOrBuilder getNotesOrBuilder(
        int index) {
      return notes_.get(index);
    }

    public static final int MARKERS_FIELD_NUMBER = 3;
    private java.util.List<net.onlinesequencer.player.protos.SequenceProto.Marker> markers_;
    /**
     * <code>repeated .Marker markers = 3;</code>
     */
    @java.lang.Override
    public java.util.List<net.onlinesequencer.player.protos.SequenceProto.Marker> getMarkersList() {
      return markers_;
    }
    /**
     * <code>repeated .Marker markers = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends net.onlinesequencer.player.protos.SequenceProto.MarkerOrBuilder> 
        getMarkersOrBuilderList() {
      return markers_;
    }
    /**
     * <code>repeated .Marker markers = 3;</code>
     */
    @java.lang.Override
    public int getMarkersCount() {
      return markers_.size();
    }
    /**
     * <code>repeated .Marker markers = 3;</code>
     */
    @java.lang.Override
    public net.onlinesequencer.player.protos.SequenceProto.Marker getMarkers(int index) {
      return markers_.get(index);
    }
    /**
     * <code>repeated .Marker markers = 3;</code>
     */
    @java.lang.Override
    public net.onlinesequencer.player.protos.SequenceProto.MarkerOrBuilder getMarkersOrBuilder(
        int index) {
      return markers_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (settings_ != null) {
        output.writeMessage(1, getSettings());
      }
      for (int i = 0; i < notes_.size(); i++) {
        output.writeMessage(2, notes_.get(i));
      }
      for (int i = 0; i < markers_.size(); i++) {
        output.writeMessage(3, markers_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (settings_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getSettings());
      }
      for (int i = 0; i < notes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, notes_.get(i));
      }
      for (int i = 0; i < markers_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, markers_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.onlinesequencer.player.protos.SequenceProto.Sequence)) {
        return super.equals(obj);
      }
      net.onlinesequencer.player.protos.SequenceProto.Sequence other = (net.onlinesequencer.player.protos.SequenceProto.Sequence) obj;

      if (hasSettings() != other.hasSettings()) return false;
      if (hasSettings()) {
        if (!getSettings()
            .equals(other.getSettings())) return false;
      }
      if (!getNotesList()
          .equals(other.getNotesList())) return false;
      if (!getMarkersList()
          .equals(other.getMarkersList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSettings()) {
        hash = (37 * hash) + SETTINGS_FIELD_NUMBER;
        hash = (53 * hash) + getSettings().hashCode();
      }
      if (getNotesCount() > 0) {
        hash = (37 * hash) + NOTES_FIELD_NUMBER;
        hash = (53 * hash) + getNotesList().hashCode();
      }
      if (getMarkersCount() > 0) {
        hash = (37 * hash) + MARKERS_FIELD_NUMBER;
        hash = (53 * hash) + getMarkersList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.onlinesequencer.player.protos.SequenceProto.Sequence parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.Sequence parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.Sequence parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.Sequence parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.Sequence parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.Sequence parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.Sequence parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.Sequence parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.Sequence parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.Sequence parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.Sequence parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.onlinesequencer.player.protos.SequenceProto.Sequence parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.onlinesequencer.player.protos.SequenceProto.Sequence prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Sequence}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Sequence)
        net.onlinesequencer.player.protos.SequenceProto.SequenceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.onlinesequencer.player.protos.SequenceProto.internal_static_Sequence_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.onlinesequencer.player.protos.SequenceProto.internal_static_Sequence_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.onlinesequencer.player.protos.SequenceProto.Sequence.class, net.onlinesequencer.player.protos.SequenceProto.Sequence.Builder.class);
      }

      // Construct using net.onlinesequencer.player.protos.SequenceProto.Sequence.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (settingsBuilder_ == null) {
          settings_ = null;
        } else {
          settings_ = null;
          settingsBuilder_ = null;
        }
        if (notesBuilder_ == null) {
          notes_ = java.util.Collections.emptyList();
        } else {
          notes_ = null;
          notesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (markersBuilder_ == null) {
          markers_ = java.util.Collections.emptyList();
        } else {
          markers_ = null;
          markersBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.onlinesequencer.player.protos.SequenceProto.internal_static_Sequence_descriptor;
      }

      @java.lang.Override
      public net.onlinesequencer.player.protos.SequenceProto.Sequence getDefaultInstanceForType() {
        return net.onlinesequencer.player.protos.SequenceProto.Sequence.getDefaultInstance();
      }

      @java.lang.Override
      public net.onlinesequencer.player.protos.SequenceProto.Sequence build() {
        net.onlinesequencer.player.protos.SequenceProto.Sequence result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.onlinesequencer.player.protos.SequenceProto.Sequence buildPartial() {
        net.onlinesequencer.player.protos.SequenceProto.Sequence result = new net.onlinesequencer.player.protos.SequenceProto.Sequence(this);
        int from_bitField0_ = bitField0_;
        if (settingsBuilder_ == null) {
          result.settings_ = settings_;
        } else {
          result.settings_ = settingsBuilder_.build();
        }
        if (notesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            notes_ = java.util.Collections.unmodifiableList(notes_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.notes_ = notes_;
        } else {
          result.notes_ = notesBuilder_.build();
        }
        if (markersBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            markers_ = java.util.Collections.unmodifiableList(markers_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.markers_ = markers_;
        } else {
          result.markers_ = markersBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.onlinesequencer.player.protos.SequenceProto.Sequence) {
          return mergeFrom((net.onlinesequencer.player.protos.SequenceProto.Sequence)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.onlinesequencer.player.protos.SequenceProto.Sequence other) {
        if (other == net.onlinesequencer.player.protos.SequenceProto.Sequence.getDefaultInstance()) return this;
        if (other.hasSettings()) {
          mergeSettings(other.getSettings());
        }
        if (notesBuilder_ == null) {
          if (!other.notes_.isEmpty()) {
            if (notes_.isEmpty()) {
              notes_ = other.notes_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureNotesIsMutable();
              notes_.addAll(other.notes_);
            }
            onChanged();
          }
        } else {
          if (!other.notes_.isEmpty()) {
            if (notesBuilder_.isEmpty()) {
              notesBuilder_.dispose();
              notesBuilder_ = null;
              notes_ = other.notes_;
              bitField0_ = (bitField0_ & ~0x00000001);
              notesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getNotesFieldBuilder() : null;
            } else {
              notesBuilder_.addAllMessages(other.notes_);
            }
          }
        }
        if (markersBuilder_ == null) {
          if (!other.markers_.isEmpty()) {
            if (markers_.isEmpty()) {
              markers_ = other.markers_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMarkersIsMutable();
              markers_.addAll(other.markers_);
            }
            onChanged();
          }
        } else {
          if (!other.markers_.isEmpty()) {
            if (markersBuilder_.isEmpty()) {
              markersBuilder_.dispose();
              markersBuilder_ = null;
              markers_ = other.markers_;
              bitField0_ = (bitField0_ & ~0x00000002);
              markersBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMarkersFieldBuilder() : null;
            } else {
              markersBuilder_.addAllMessages(other.markers_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getSettingsFieldBuilder().getBuilder(),
                    extensionRegistry);

                break;
              } // case 10
              case 18: {
                net.onlinesequencer.player.protos.SequenceProto.Note m =
                    input.readMessage(
                        net.onlinesequencer.player.protos.SequenceProto.Note.parser(),
                        extensionRegistry);
                if (notesBuilder_ == null) {
                  ensureNotesIsMutable();
                  notes_.add(m);
                } else {
                  notesBuilder_.addMessage(m);
                }
                break;
              } // case 18
              case 26: {
                net.onlinesequencer.player.protos.SequenceProto.Marker m =
                    input.readMessage(
                        net.onlinesequencer.player.protos.SequenceProto.Marker.parser(),
                        extensionRegistry);
                if (markersBuilder_ == null) {
                  ensureMarkersIsMutable();
                  markers_.add(m);
                } else {
                  markersBuilder_.addMessage(m);
                }
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private net.onlinesequencer.player.protos.SequenceProto.SequenceSettings settings_;
      private com.google.protobuf.SingleFieldBuilderV3<
          net.onlinesequencer.player.protos.SequenceProto.SequenceSettings, net.onlinesequencer.player.protos.SequenceProto.SequenceSettings.Builder, net.onlinesequencer.player.protos.SequenceProto.SequenceSettingsOrBuilder> settingsBuilder_;
      /**
       * <code>.SequenceSettings settings = 1;</code>
       * @return Whether the settings field is set.
       */
      public boolean hasSettings() {
        return settingsBuilder_ != null || settings_ != null;
      }
      /**
       * <code>.SequenceSettings settings = 1;</code>
       * @return The settings.
       */
      public net.onlinesequencer.player.protos.SequenceProto.SequenceSettings getSettings() {
        if (settingsBuilder_ == null) {
          return settings_ == null ? net.onlinesequencer.player.protos.SequenceProto.SequenceSettings.getDefaultInstance() : settings_;
        } else {
          return settingsBuilder_.getMessage();
        }
      }
      /**
       * <code>.SequenceSettings settings = 1;</code>
       */
      public Builder setSettings(net.onlinesequencer.player.protos.SequenceProto.SequenceSettings value) {
        if (settingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          settings_ = value;
          onChanged();
        } else {
          settingsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.SequenceSettings settings = 1;</code>
       */
      public Builder setSettings(
          net.onlinesequencer.player.protos.SequenceProto.SequenceSettings.Builder builderForValue) {
        if (settingsBuilder_ == null) {
          settings_ = builderForValue.build();
          onChanged();
        } else {
          settingsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.SequenceSettings settings = 1;</code>
       */
      public Builder mergeSettings(net.onlinesequencer.player.protos.SequenceProto.SequenceSettings value) {
        if (settingsBuilder_ == null) {
          if (settings_ != null) {
            settings_ =
              net.onlinesequencer.player.protos.SequenceProto.SequenceSettings.newBuilder(settings_).mergeFrom(value).buildPartial();
          } else {
            settings_ = value;
          }
          onChanged();
        } else {
          settingsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.SequenceSettings settings = 1;</code>
       */
      public Builder clearSettings() {
        if (settingsBuilder_ == null) {
          settings_ = null;
          onChanged();
        } else {
          settings_ = null;
          settingsBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.SequenceSettings settings = 1;</code>
       */
      public net.onlinesequencer.player.protos.SequenceProto.SequenceSettings.Builder getSettingsBuilder() {
        
        onChanged();
        return getSettingsFieldBuilder().getBuilder();
      }
      /**
       * <code>.SequenceSettings settings = 1;</code>
       */
      public net.onlinesequencer.player.protos.SequenceProto.SequenceSettingsOrBuilder getSettingsOrBuilder() {
        if (settingsBuilder_ != null) {
          return settingsBuilder_.getMessageOrBuilder();
        } else {
          return settings_ == null ?
              net.onlinesequencer.player.protos.SequenceProto.SequenceSettings.getDefaultInstance() : settings_;
        }
      }
      /**
       * <code>.SequenceSettings settings = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          net.onlinesequencer.player.protos.SequenceProto.SequenceSettings, net.onlinesequencer.player.protos.SequenceProto.SequenceSettings.Builder, net.onlinesequencer.player.protos.SequenceProto.SequenceSettingsOrBuilder> 
          getSettingsFieldBuilder() {
        if (settingsBuilder_ == null) {
          settingsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              net.onlinesequencer.player.protos.SequenceProto.SequenceSettings, net.onlinesequencer.player.protos.SequenceProto.SequenceSettings.Builder, net.onlinesequencer.player.protos.SequenceProto.SequenceSettingsOrBuilder>(
                  getSettings(),
                  getParentForChildren(),
                  isClean());
          settings_ = null;
        }
        return settingsBuilder_;
      }

      private java.util.List<net.onlinesequencer.player.protos.SequenceProto.Note> notes_ =
        java.util.Collections.emptyList();
      private void ensureNotesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          notes_ = new java.util.ArrayList<net.onlinesequencer.player.protos.SequenceProto.Note>(notes_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          net.onlinesequencer.player.protos.SequenceProto.Note, net.onlinesequencer.player.protos.SequenceProto.Note.Builder, net.onlinesequencer.player.protos.SequenceProto.NoteOrBuilder> notesBuilder_;

      /**
       * <code>repeated .Note notes = 2;</code>
       */
      public java.util.List<net.onlinesequencer.player.protos.SequenceProto.Note> getNotesList() {
        if (notesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(notes_);
        } else {
          return notesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Note notes = 2;</code>
       */
      public int getNotesCount() {
        if (notesBuilder_ == null) {
          return notes_.size();
        } else {
          return notesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Note notes = 2;</code>
       */
      public net.onlinesequencer.player.protos.SequenceProto.Note getNotes(int index) {
        if (notesBuilder_ == null) {
          return notes_.get(index);
        } else {
          return notesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Note notes = 2;</code>
       */
      public Builder setNotes(
          int index, net.onlinesequencer.player.protos.SequenceProto.Note value) {
        if (notesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNotesIsMutable();
          notes_.set(index, value);
          onChanged();
        } else {
          notesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Note notes = 2;</code>
       */
      public Builder setNotes(
          int index, net.onlinesequencer.player.protos.SequenceProto.Note.Builder builderForValue) {
        if (notesBuilder_ == null) {
          ensureNotesIsMutable();
          notes_.set(index, builderForValue.build());
          onChanged();
        } else {
          notesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Note notes = 2;</code>
       */
      public Builder addNotes(net.onlinesequencer.player.protos.SequenceProto.Note value) {
        if (notesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNotesIsMutable();
          notes_.add(value);
          onChanged();
        } else {
          notesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Note notes = 2;</code>
       */
      public Builder addNotes(
          int index, net.onlinesequencer.player.protos.SequenceProto.Note value) {
        if (notesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNotesIsMutable();
          notes_.add(index, value);
          onChanged();
        } else {
          notesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Note notes = 2;</code>
       */
      public Builder addNotes(
          net.onlinesequencer.player.protos.SequenceProto.Note.Builder builderForValue) {
        if (notesBuilder_ == null) {
          ensureNotesIsMutable();
          notes_.add(builderForValue.build());
          onChanged();
        } else {
          notesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Note notes = 2;</code>
       */
      public Builder addNotes(
          int index, net.onlinesequencer.player.protos.SequenceProto.Note.Builder builderForValue) {
        if (notesBuilder_ == null) {
          ensureNotesIsMutable();
          notes_.add(index, builderForValue.build());
          onChanged();
        } else {
          notesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Note notes = 2;</code>
       */
      public Builder addAllNotes(
          java.lang.Iterable<? extends net.onlinesequencer.player.protos.SequenceProto.Note> values) {
        if (notesBuilder_ == null) {
          ensureNotesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, notes_);
          onChanged();
        } else {
          notesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Note notes = 2;</code>
       */
      public Builder clearNotes() {
        if (notesBuilder_ == null) {
          notes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          notesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Note notes = 2;</code>
       */
      public Builder removeNotes(int index) {
        if (notesBuilder_ == null) {
          ensureNotesIsMutable();
          notes_.remove(index);
          onChanged();
        } else {
          notesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Note notes = 2;</code>
       */
      public net.onlinesequencer.player.protos.SequenceProto.Note.Builder getNotesBuilder(
          int index) {
        return getNotesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Note notes = 2;</code>
       */
      public net.onlinesequencer.player.protos.SequenceProto.NoteOrBuilder getNotesOrBuilder(
          int index) {
        if (notesBuilder_ == null) {
          return notes_.get(index);  } else {
          return notesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Note notes = 2;</code>
       */
      public java.util.List<? extends net.onlinesequencer.player.protos.SequenceProto.NoteOrBuilder> 
           getNotesOrBuilderList() {
        if (notesBuilder_ != null) {
          return notesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(notes_);
        }
      }
      /**
       * <code>repeated .Note notes = 2;</code>
       */
      public net.onlinesequencer.player.protos.SequenceProto.Note.Builder addNotesBuilder() {
        return getNotesFieldBuilder().addBuilder(
            net.onlinesequencer.player.protos.SequenceProto.Note.getDefaultInstance());
      }
      /**
       * <code>repeated .Note notes = 2;</code>
       */
      public net.onlinesequencer.player.protos.SequenceProto.Note.Builder addNotesBuilder(
          int index) {
        return getNotesFieldBuilder().addBuilder(
            index, net.onlinesequencer.player.protos.SequenceProto.Note.getDefaultInstance());
      }
      /**
       * <code>repeated .Note notes = 2;</code>
       */
      public java.util.List<net.onlinesequencer.player.protos.SequenceProto.Note.Builder> 
           getNotesBuilderList() {
        return getNotesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          net.onlinesequencer.player.protos.SequenceProto.Note, net.onlinesequencer.player.protos.SequenceProto.Note.Builder, net.onlinesequencer.player.protos.SequenceProto.NoteOrBuilder> 
          getNotesFieldBuilder() {
        if (notesBuilder_ == null) {
          notesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              net.onlinesequencer.player.protos.SequenceProto.Note, net.onlinesequencer.player.protos.SequenceProto.Note.Builder, net.onlinesequencer.player.protos.SequenceProto.NoteOrBuilder>(
                  notes_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          notes_ = null;
        }
        return notesBuilder_;
      }

      private java.util.List<net.onlinesequencer.player.protos.SequenceProto.Marker> markers_ =
        java.util.Collections.emptyList();
      private void ensureMarkersIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          markers_ = new java.util.ArrayList<net.onlinesequencer.player.protos.SequenceProto.Marker>(markers_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          net.onlinesequencer.player.protos.SequenceProto.Marker, net.onlinesequencer.player.protos.SequenceProto.Marker.Builder, net.onlinesequencer.player.protos.SequenceProto.MarkerOrBuilder> markersBuilder_;

      /**
       * <code>repeated .Marker markers = 3;</code>
       */
      public java.util.List<net.onlinesequencer.player.protos.SequenceProto.Marker> getMarkersList() {
        if (markersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(markers_);
        } else {
          return markersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Marker markers = 3;</code>
       */
      public int getMarkersCount() {
        if (markersBuilder_ == null) {
          return markers_.size();
        } else {
          return markersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Marker markers = 3;</code>
       */
      public net.onlinesequencer.player.protos.SequenceProto.Marker getMarkers(int index) {
        if (markersBuilder_ == null) {
          return markers_.get(index);
        } else {
          return markersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Marker markers = 3;</code>
       */
      public Builder setMarkers(
          int index, net.onlinesequencer.player.protos.SequenceProto.Marker value) {
        if (markersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMarkersIsMutable();
          markers_.set(index, value);
          onChanged();
        } else {
          markersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Marker markers = 3;</code>
       */
      public Builder setMarkers(
          int index, net.onlinesequencer.player.protos.SequenceProto.Marker.Builder builderForValue) {
        if (markersBuilder_ == null) {
          ensureMarkersIsMutable();
          markers_.set(index, builderForValue.build());
          onChanged();
        } else {
          markersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Marker markers = 3;</code>
       */
      public Builder addMarkers(net.onlinesequencer.player.protos.SequenceProto.Marker value) {
        if (markersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMarkersIsMutable();
          markers_.add(value);
          onChanged();
        } else {
          markersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Marker markers = 3;</code>
       */
      public Builder addMarkers(
          int index, net.onlinesequencer.player.protos.SequenceProto.Marker value) {
        if (markersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMarkersIsMutable();
          markers_.add(index, value);
          onChanged();
        } else {
          markersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Marker markers = 3;</code>
       */
      public Builder addMarkers(
          net.onlinesequencer.player.protos.SequenceProto.Marker.Builder builderForValue) {
        if (markersBuilder_ == null) {
          ensureMarkersIsMutable();
          markers_.add(builderForValue.build());
          onChanged();
        } else {
          markersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Marker markers = 3;</code>
       */
      public Builder addMarkers(
          int index, net.onlinesequencer.player.protos.SequenceProto.Marker.Builder builderForValue) {
        if (markersBuilder_ == null) {
          ensureMarkersIsMutable();
          markers_.add(index, builderForValue.build());
          onChanged();
        } else {
          markersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Marker markers = 3;</code>
       */
      public Builder addAllMarkers(
          java.lang.Iterable<? extends net.onlinesequencer.player.protos.SequenceProto.Marker> values) {
        if (markersBuilder_ == null) {
          ensureMarkersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, markers_);
          onChanged();
        } else {
          markersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Marker markers = 3;</code>
       */
      public Builder clearMarkers() {
        if (markersBuilder_ == null) {
          markers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          markersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Marker markers = 3;</code>
       */
      public Builder removeMarkers(int index) {
        if (markersBuilder_ == null) {
          ensureMarkersIsMutable();
          markers_.remove(index);
          onChanged();
        } else {
          markersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Marker markers = 3;</code>
       */
      public net.onlinesequencer.player.protos.SequenceProto.Marker.Builder getMarkersBuilder(
          int index) {
        return getMarkersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Marker markers = 3;</code>
       */
      public net.onlinesequencer.player.protos.SequenceProto.MarkerOrBuilder getMarkersOrBuilder(
          int index) {
        if (markersBuilder_ == null) {
          return markers_.get(index);  } else {
          return markersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Marker markers = 3;</code>
       */
      public java.util.List<? extends net.onlinesequencer.player.protos.SequenceProto.MarkerOrBuilder> 
           getMarkersOrBuilderList() {
        if (markersBuilder_ != null) {
          return markersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(markers_);
        }
      }
      /**
       * <code>repeated .Marker markers = 3;</code>
       */
      public net.onlinesequencer.player.protos.SequenceProto.Marker.Builder addMarkersBuilder() {
        return getMarkersFieldBuilder().addBuilder(
            net.onlinesequencer.player.protos.SequenceProto.Marker.getDefaultInstance());
      }
      /**
       * <code>repeated .Marker markers = 3;</code>
       */
      public net.onlinesequencer.player.protos.SequenceProto.Marker.Builder addMarkersBuilder(
          int index) {
        return getMarkersFieldBuilder().addBuilder(
            index, net.onlinesequencer.player.protos.SequenceProto.Marker.getDefaultInstance());
      }
      /**
       * <code>repeated .Marker markers = 3;</code>
       */
      public java.util.List<net.onlinesequencer.player.protos.SequenceProto.Marker.Builder> 
           getMarkersBuilderList() {
        return getMarkersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          net.onlinesequencer.player.protos.SequenceProto.Marker, net.onlinesequencer.player.protos.SequenceProto.Marker.Builder, net.onlinesequencer.player.protos.SequenceProto.MarkerOrBuilder> 
          getMarkersFieldBuilder() {
        if (markersBuilder_ == null) {
          markersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              net.onlinesequencer.player.protos.SequenceProto.Marker, net.onlinesequencer.player.protos.SequenceProto.Marker.Builder, net.onlinesequencer.player.protos.SequenceProto.MarkerOrBuilder>(
                  markers_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          markers_ = null;
        }
        return markersBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Sequence)
    }

    // @@protoc_insertion_point(class_scope:Sequence)
    private static final net.onlinesequencer.player.protos.SequenceProto.Sequence DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.onlinesequencer.player.protos.SequenceProto.Sequence();
    }

    public static net.onlinesequencer.player.protos.SequenceProto.Sequence getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Sequence>
        PARSER = new com.google.protobuf.AbstractParser<Sequence>() {
      @java.lang.Override
      public Sequence parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Sequence> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Sequence> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.onlinesequencer.player.protos.SequenceProto.Sequence getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Note_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Note_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Marker_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Marker_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_InstrumentSettings_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_InstrumentSettings_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Envelope_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Envelope_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Synth_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Synth_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SequenceSettings_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SequenceSettings_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SequenceSettings_InstrumentsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SequenceSettings_InstrumentsEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Sequence_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Sequence_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016sequence.proto\032\017note_type.proto\"a\n\004Not" +
      "e\022\027\n\004type\030\001 \001(\0162\t.NoteType\022\014\n\004time\030\002 \001(\002" +
      "\022\016\n\006length\030\003 \001(\002\022\022\n\ninstrument\030\004 \001(\005\022\016\n\006" +
      "volume\030\005 \001(\002\"Y\n\006Marker\022\014\n\004time\030\001 \001(\002\022\017\n\007" +
      "setting\030\002 \001(\005\022\022\n\ninstrument\030\003 \001(\005\022\r\n\005val" +
      "ue\030\004 \001(\002\022\r\n\005blend\030\005 \001(\010\"\317\002\n\022InstrumentSe" +
      "ttings\022\016\n\006volume\030\001 \001(\002\022\r\n\005delay\030\002 \001(\010\022\016\n" +
      "\006reverb\030\003 \001(\010\022\023\n\013reverb_type\030\n \001(\005\022\037\n\027on" +
      "e_minus_reverb_volume\030\013 \001(\002\022\013\n\003pan\030\004 \001(\002" +
      "\022\021\n\tenable_eq\030\005 \001(\010\022\016\n\006eq_low\030\006 \001(\002\022\016\n\006e" +
      "q_mid\030\007 \001(\002\022\017\n\007eq_high\030\010 \001(\002\022\016\n\006detune\030\t" +
      " \001(\002\022\024\n\014distort_type\030\014 \001(\005\022\026\n\016distort_vo" +
      "lume\030\r \001(\002\022\014\n\004name\030\017 \001(\t\022\021\n\tfade_time\030\020 " +
      "\001(\002\022\r\n\005color\030\021 \001(\r\022\025\n\005synth\030\016 \001(\0132\006.Synt" +
      "h\"j\n\010Envelope\022\017\n\007enabled\030\001 \001(\010\022\016\n\006attack" +
      "\030\002 \001(\002\022\014\n\004hold\030\003 \001(\002\022\r\n\005decay\030\004 \001(\002\022\017\n\007s" +
      "ustain\030\005 \001(\002\022\017\n\007release\030\006 \001(\002\"\263\002\n\005Synth\022" +
      "\030\n\004type\030\001 \001(\0162\n.SynthType\022\"\n\017volume_enve" +
      "lope\030\002 \001(\0132\t.Envelope\022\"\n\017filter_envelope" +
      "\030\003 \001(\0132\t.Envelope\022\016\n\006filter\030\004 \001(\002\022\021\n\tres" +
      "onance\030\005 \001(\002\022\023\n\013filter_type\030\006 \001(\005\022\023\n\013lfo" +
      "_enabled\030\007 \001(\010\022\032\n\010lfo_type\030\010 \001(\0162\010.LFOTy" +
      "pe\022\020\n\010lfo_freq\030\t \001(\002\022\021\n\tlfo_level\030\n \001(\002\022" +
      "\036\n\nlfo_target\030\013 \001(\0162\n.LFOTarget\022\032\n\010lfo_m" +
      "ode\030\014 \001(\0162\010.LFOMode\"\323\001\n\020SequenceSettings" +
      "\022\013\n\003bpm\030\001 \001(\005\022\026\n\016time_signature\030\002 \001(\005\0227\n" +
      "\013instruments\030\003 \003(\0132\".SequenceSettings.In" +
      "strumentsEntry\022\030\n\020one_minus_volume\030\004 \001(\002" +
      "\032G\n\020InstrumentsEntry\022\013\n\003key\030\001 \001(\005\022\"\n\005val" +
      "ue\030\002 \001(\0132\023.InstrumentSettings:\0028\001\"_\n\010Seq" +
      "uence\022#\n\010settings\030\001 \001(\0132\021.SequenceSettin" +
      "gs\022\024\n\005notes\030\002 \003(\0132\005.Note\022\030\n\007markers\030\003 \003(" +
      "\0132\007.Marker*=\n\tSynthType\022\010\n\004Sine\020\000\022\n\n\006Squ" +
      "are\020\001\022\014\n\010Sawtooth\020\002\022\014\n\010Triangle\020\003*G\n\007LFO" +
      "Type\022\013\n\007SineLFO\020\000\022\r\n\tSquareLFO\020\001\022\017\n\013Sawt" +
      "oothLFO\020\002\022\017\n\013TriangleLFO\020\003*.\n\tLFOTarget\022" +
      "\n\n\006Volume\020\000\022\t\n\005Pitch\020\001\022\n\n\006Filter\020\002*\'\n\007LF" +
      "OMode\022\r\n\tNumerator\020\000\022\r\n\tFrequency\020\001B2\n!n" +
      "et.onlinesequencer.player.protosB\rSequen" +
      "ceProtob\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          net.onlinesequencer.player.protos.NoteTypeProto.getDescriptor(),
        });
    internal_static_Note_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_Note_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Note_descriptor,
        new java.lang.String[] { "Type", "Time", "Length", "Instrument", "Volume", });
    internal_static_Marker_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_Marker_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Marker_descriptor,
        new java.lang.String[] { "Time", "Setting", "Instrument", "Value", "Blend", });
    internal_static_InstrumentSettings_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_InstrumentSettings_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_InstrumentSettings_descriptor,
        new java.lang.String[] { "Volume", "Delay", "Reverb", "ReverbType", "OneMinusReverbVolume", "Pan", "EnableEq", "EqLow", "EqMid", "EqHigh", "Detune", "DistortType", "DistortVolume", "Name", "FadeTime", "Color", "Synth", });
    internal_static_Envelope_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_Envelope_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Envelope_descriptor,
        new java.lang.String[] { "Enabled", "Attack", "Hold", "Decay", "Sustain", "Release", });
    internal_static_Synth_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_Synth_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Synth_descriptor,
        new java.lang.String[] { "Type", "VolumeEnvelope", "FilterEnvelope", "Filter", "Resonance", "FilterType", "LfoEnabled", "LfoType", "LfoFreq", "LfoLevel", "LfoTarget", "LfoMode", });
    internal_static_SequenceSettings_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_SequenceSettings_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SequenceSettings_descriptor,
        new java.lang.String[] { "Bpm", "TimeSignature", "Instruments", "OneMinusVolume", });
    internal_static_SequenceSettings_InstrumentsEntry_descriptor =
      internal_static_SequenceSettings_descriptor.getNestedTypes().get(0);
    internal_static_SequenceSettings_InstrumentsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SequenceSettings_InstrumentsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_Sequence_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_Sequence_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Sequence_descriptor,
        new java.lang.String[] { "Settings", "Notes", "Markers", });
    net.onlinesequencer.player.protos.NoteTypeProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
